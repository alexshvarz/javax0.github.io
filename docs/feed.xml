<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://javax0.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://javax0.github.io/" rel="alternate" type="text/html" /><updated>2024-07-25T14:03:06+02:00</updated><id>https://javax0.github.io/feed.xml</id><title type="html">Java Deep, mostly Java</title><subtitle>javax0 is a technical Java oriented blog. Whenever I find something interesting, in the mood and feel the power to publish it, you will get it here. Publications are usually released on Wednesday 15:00am GMT. Earlier posts of the blog were published on Javax0 Wordpress Site at https://javax0.wordpress.com</subtitle><entry><title type="html">LLM and RAG technology</title><link href="https://javax0.github.io/2024/07/22/llm-and-rag.html" rel="alternate" type="text/html" title="LLM and RAG technology" /><published>2024-07-22T00:00:00+02:00</published><updated>2024-07-22T00:00:00+02:00</updated><id>https://javax0.github.io/2024/07/22/llm-and-rag</id><content type="html" xml:base="https://javax0.github.io/2024/07/22/llm-and-rag.html">&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;1-introduction&quot;&gt;1. Introduction&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This article is a brief introduction to LLM and RAG technology.
The article contains many simplifications that laypeople can understand.
If you&amp;#8217;re interested in the technology in more detail, this article won&amp;#8217;t be enough. You may find parts that aren&amp;#8217;t entirely accurate, although they convey the essence well.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;2-the-essence-of-rag-technology&quot;&gt;2. The essence of RAG technology&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;RAG is an acronym for Retrieval Augmented Generation.
It is an English acronym.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This technology tries to complement LLM or Large Language Model applications.
The goal is to be able to handle knowledge bases and information that are not found in the Large Language Model itself.
The Large Language Model is a neural network that has been trained somehow.
They are usually trained with large quantities of data that are freely available online.
As a result, Large Language Models can communicate in an almost human-like manner.
If we ask them a question, they can answer it.
However, they need to learn about what data or information exists within a company, as these are not public data.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;3-limitations-of-llms&quot;&gt;3. Limitations of LLMs&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;LLMs cannot be taught this corporate information in their current form.
Currently, available applications work by developers creating some models.
Then, they train this model, setting millions or billions of parameters with training data.
They ask questions, get answers, and then adjust these parameters based on the quality of the answers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Of course, there are programs and algorithms for this, not by hand.
Under current conditions, this process takes a few months to complete using the energy requirements of a small city.
They run this fine-tuning algorithm on thousands of machines.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;4-characteristics-of-llm-models&quot;&gt;4. Characteristics of LLM models&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When done, the model can be downloaded and run on your machine.
The model itself represents 1-2 GB of data.
After this, this neural network no longer changes; it doesn&amp;#8217;t learn new things.
It can only learn something new if we get a new version.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;5-application-of-rag-technology&quot;&gt;5. Application of RAG technology&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Yet we want to use this kind of capability within a company.
We want this neural network, the LLM model, to give an answer that takes into account our company&amp;#8217;s internal information when we ask a question.
We can do this as if we were doing something similar with humans.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If someone comes to the company, and we want to ask them questions about the company, but they don&amp;#8217;t know anything about our company, we first teach them things and give them information.
They will put this information into their neural network.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;6-operating-principle-of-rag&quot;&gt;6. Operating principle of RAG&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We can see if they focus on work and forget everything else when they go home, and they keep this company-specific information in a separate place.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It is the model for LLM and RAG as well.
We put the information that isn&amp;#8217;t in the LLM&amp;#8217;s neural network separately in a separate database.
If for no other reason, we can&amp;#8217;t put it into the neural network&amp;#8217;s database or into its model.
These are private. We don&amp;#8217;t know what they look like or how they&amp;#8217;re structured, and they&amp;#8217;re not necessarily modifiable in the form they&amp;#8217;re in the program.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We don&amp;#8217;t have, we might say, the &quot;source code&quot; of the data - not necessarily the program&amp;#8217;s source code, but the original form of the data.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;7-characteristics-of-the-llm-model&quot;&gt;7. Characteristics of the LLM model&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This model becomes 1 GB through several steps and is a relatively small data set.
It&amp;#8217;s relative to what&amp;#8217;s small, but in LLM terms, this is considered small.
And it&amp;#8217;s not sure it&amp;#8217;s still in a state that can be modified.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;8-use-of-vector-databases&quot;&gt;8. Use of vector databases&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If we want to put our own information into a separate database, we usually use a vector database.
A vector database is a special application that can determine the distance between two pieces of text.
So how much are they about the same thing, and how many are the exact keywords?&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;9-preparing-the-knowledge-base&quot;&gt;9. Preparing the knowledge base&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We cut up the knowledge base available within the company into pieces of text.
These pieces of text are typically a thousand characters or a thousand letters long and form individual records.
There&amp;#8217;s a little overlap between them, so we don&amp;#8217;t start the next one where the previous one ended, but a little earlier.
It is to have context and continuity in the text.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;10-the-embedding-algorithm&quot;&gt;10. The embedding algorithm&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We put each of these pieces of text into a database and ask an embedding algorithm to assign it a vector.
The vector is a sequence of numbers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It is similar to, for example, GPS coordinates.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Essentially, this vector is a spatial coordinate of this text, but this space is not three-dimensional but very multi-dimensional.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;11-rag-operation-for-questions&quot;&gt;11. RAG operation for questions&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When a user addresses a question to an application developed with RAG technology, we also vectorize this question.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We ask the embedding system to tell us where this question is located in space.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Then, we can ask the vector database, into which we put the vectors belonging to all our text pieces, which text pieces from our knowledge base are closest in space to the question.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;12-distance-calculation-between-vectors&quot;&gt;12. Distance calculation between vectors&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It is a distance calculation and indexing.
If you like, you can calculate the distance with the Pythagorean theorem in an orthogonal vector space.
Although it sounds complicated, we don&amp;#8217;t really need to deal with it or know how it works.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;13-characteristics-of-the-embedding-algorithm&quot;&gt;13. Characteristics of the embedding algorithm&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The point is that this embedding algorithm is usually based on a neural network as well.
There are elementary embedding algorithms, too, but these are practically less usable.
There are more complex embedding systems based on neural networks that do this, depending on the language.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;14-selection-of-relevant-text-pieces&quot;&gt;14. Selection of relevant text pieces&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The vector database tells us which text pieces from our knowledge base are close to the question, meaning they are relevant to answering the question.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;15-assembling-the-prompt&quot;&gt;15. Assembling the prompt&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;After this, we ask the LLM for a prompt that is not the original, but we put in front of it those pieces of text we extracted from our own knowledge base.
We can&amp;#8217;t fit the whole thing into one question because it would be too much, but we can include a few, five, six, seven, or even ten from the knowledge base.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We write in the prompt that this is a context, and we want to get the answer in this context, then the question itself.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;16-summary-of-the-rag-process&quot;&gt;16. Summary of the RAG process&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Then, we send this to the LLM algorithm, which reads it, does something with it, and answers it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;And this is it.
The whole RAG is that simple.
You need a vector database; you need to cut up the text.
If someone understands programming, they know this is not a big deal.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We need to put the text into a normal database so that we can restore it for prompt generation.
We put the vectors into the vector database so that we can ask which are the relevant text pieces for a given question.
Then, we need to be able to ask the LLM questions from a program and program standard interfaces.
Finally, we need to be able to send the answer back to the client or user who can read it.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;17-summary&quot;&gt;17. Summary&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;With this technology, we produced an application that you can chat with just like ChatGPT.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;But it knows not only the things of the big world up to a certain point in time when its training was closed but also the things in our special knowledge base.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">1. Introduction</summary></entry><entry><title type="html">LLM- und RAG-Technologie</title><link href="https://javax0.github.io/2024/07/22/llm-and-rag-de.html" rel="alternate" type="text/html" title="LLM- und RAG-Technologie" /><published>2024-07-22T00:00:00+02:00</published><updated>2024-07-22T00:00:00+02:00</updated><id>https://javax0.github.io/2024/07/22/llm-and-rag-de</id><content type="html" xml:base="https://javax0.github.io/2024/07/22/llm-and-rag-de.html">&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;1-einleitung&quot;&gt;1. Einleitung&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Dieser Artikel ist eine kurze Einführung in die LLM- und RAG-Technologie.
Der Artikel enthält viele Vereinfachungen, die Laien verstehen können.
Wenn Sie sich für die Technologie im Detail interessieren, wird dieser Artikel nicht ausreichen. Sie werden möglicherweise Teile finden, die nicht ganz genau sind, obwohl sie das Wesentliche gut vermitteln.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;2-das-wesen-der-rag-technologie&quot;&gt;2. Das Wesen der RAG-Technologie&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;RAG ist ein Akronym für Retrieval Augmented Generation.
Es ist ein englisches Akronym.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Diese Technologie versucht, LLM- oder Large Language Model-Anwendungen zu ergänzen.
Das Ziel ist es, Wissensdatenbanken und Informationen behandeln zu können, die sich nicht im Large Language Model selbst befinden.
Das Large Language Model ist ein neuronales Netzwerk, das irgendwie trainiert wurde.
Sie werden normalerweise mit großen Mengen an Daten trainiert, die online frei verfügbar sind.
Infolgedessen können Large Language Models auf fast menschenähnliche Weise kommunizieren.
Wenn wir ihnen eine Frage stellen, können sie diese beantworten.
Sie müssen jedoch lernen, welche Daten oder Informationen innerhalb eines Unternehmens existieren, da es sich hierbei nicht um öffentliche Daten handelt.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;3-einschränkungen-von-llms&quot;&gt;3. Einschränkungen von LLMs&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;LLMs können diese Unternehmensinformationen in ihrer aktuellen Form nicht erlernen.
Derzeit funktionieren verfügbare Anwendungen so, dass Entwickler einige Modelle erstellen.
Dann trainieren sie dieses Modell, indem sie Millionen oder Milliarden von Parametern mit Trainingsdaten festlegen.
Sie stellen Fragen, erhalten Antworten und passen dann diese Parameter basierend auf der Qualität der Antworten an.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Natürlich gibt es dafür Programme und Algorithmen, nicht von Hand.
Unter den aktuellen Bedingungen dauert dieser Prozess einige Monate und verbraucht den Energiebedarf einer kleinen Stadt.
Sie führen diesen Feinabstimmungsalgorithmus auf Tausenden von Maschinen aus.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;4-eigenschaften-von-llm-modellen&quot;&gt;4. Eigenschaften von LLM-Modellen&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Wenn es fertig ist, kann das Modell heruntergeladen und auf Ihrem Rechner ausgeführt werden.
Das Modell selbst repräsentiert 1-2 GB an Daten.
Danach ändert sich dieses neuronale Netzwerk nicht mehr; es lernt keine neuen Dinge.
Es kann nur etwas Neues lernen, wenn wir eine neue Version erhalten.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;5-anwendung-der-rag-technologie&quot;&gt;5. Anwendung der RAG-Technologie&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Dennoch möchten wir diese Art von Fähigkeit innerhalb eines Unternehmens nutzen.
Wir möchten, dass dieses neuronale Netzwerk, das LLM-Modell, eine Antwort gibt, die die internen Informationen unseres Unternehmens berücksichtigt, wenn wir eine Frage stellen.
Wir können dies tun, als ob wir etwas Ähnliches mit Menschen machen würden.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Wenn jemand in das Unternehmen kommt und wir ihm Fragen über das Unternehmen stellen möchten, er aber nichts über unser Unternehmen weiß, bringen wir ihm zuerst Dinge bei und geben ihm Informationen.
Sie werden diese Informationen in ihr neuronales Netzwerk einfügen.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;6-funktionsprinzip-von-rag&quot;&gt;6. Funktionsprinzip von RAG&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Wir können sehen, ob sie sich auf die Arbeit konzentrieren und alles andere vergessen, wenn sie nach Hause gehen, und sie diese unternehmensspezifischen Informationen an einem separaten Ort aufbewahren.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Es ist das Modell für LLM und RAG gleichermaßen.
Wir legen die Informationen, die sich nicht in der neuronalen Netzwerkdatenbank des LLM befinden, separat in einer separaten Datenbank ab.
Wenn aus keinem anderen Grund, können wir es nicht in die Datenbank des neuronalen Netzwerks oder in sein Modell einfügen.
Diese sind privat. Wir wissen nicht, wie sie aussehen oder wie sie strukturiert sind, und sie sind nicht unbedingt in der Form, in der sie sich im Programm befinden, modifizierbar.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Wir haben, könnte man sagen, nicht den &quot;Quellcode&quot; der Daten - nicht unbedingt den Quellcode des Programms, sondern die ursprüngliche Form der Daten.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;7-eigenschaften-des-llm-modells&quot;&gt;7. Eigenschaften des LLM-Modells&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Dieses Modell wird durch mehrere Schritte zu 1 GB und ist ein relativ kleiner Datensatz.
Es ist relativ, was klein ist, aber in LLM-Begriffen wird dies als klein betrachtet.
Und es ist nicht sicher, ob es sich noch in einem Zustand befindet, der modifiziert werden kann.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;8-verwendung-von-vektordatenbanken&quot;&gt;8. Verwendung von Vektordatenbanken&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Wenn wir unsere eigenen Informationen in eine separate Datenbank einfügen möchten, verwenden wir normalerweise eine Vektordatenbank.
Eine Vektordatenbank ist eine spezielle Anwendung, die den Abstand zwischen zwei Textstücken bestimmen kann.
Also wie viel geht es um das Gleiche und wie viele sind die exakten Schlüsselwörter?&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;9-vorbereitung-der-wissensbasis&quot;&gt;9. Vorbereitung der Wissensbasis&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Wir zerschneiden die im Unternehmen verfügbare Wissensbasis in Textstücke.
Diese Textstücke sind typischerweise tausend Zeichen oder tausend Buchstaben lang und bilden einzelne Datensätze.
Es gibt eine kleine Überlappung zwischen ihnen, sodass wir den nächsten nicht dort beginnen, wo der vorherige endete, sondern etwas früher.
Dies geschieht, um Kontext und Kontinuität im Text zu haben.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;10-der-embedding-algorithmus&quot;&gt;10. Der Embedding-Algorithmus&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Wir legen jedes dieser Textstücke in eine Datenbank und bitten einen Embedding-Algorithmus, ihm einen Vektor zuzuweisen.
Der Vektor ist eine Folge von Zahlen.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Es ist ähnlich wie zum Beispiel GPS-Koordinaten.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Im Wesentlichen ist dieser Vektor eine räumliche Koordinate dieses Textes, aber dieser Raum ist nicht dreidimensional, sondern sehr mehrdimensional.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;11-rag-betrieb-für-fragen&quot;&gt;11. RAG-Betrieb für Fragen&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Wenn ein Benutzer eine Frage an eine mit RAG-Technologie entwickelte Anwendung richtet, vektorisieren wir auch diese Frage.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Wir bitten das Embedding-System, uns mitzuteilen, wo sich diese Frage im Raum befindet.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Dann können wir die Vektordatenbank, in die wir die zu allen unseren Textstücken gehörenden Vektoren eingefügt haben, fragen, welche Textstücke aus unserer Wissensbasis im Raum der Frage am nächsten sind.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;12-distanzberechnung-zwischen-vektoren&quot;&gt;12. Distanzberechnung zwischen Vektoren&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Es handelt sich um eine Distanzberechnung und Indexierung.
Wenn Sie möchten, können Sie den Abstand mit dem Satz des Pythagoras in einem orthogonalen Vektorraum berechnen.
Obwohl es kompliziert klingt, müssen wir uns damit nicht wirklich befassen oder wissen, wie es funktioniert.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;13-eigenschaften-des-embedding-algorithmus&quot;&gt;13. Eigenschaften des Embedding-Algorithmus&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Der Punkt ist, dass dieser Embedding-Algorithmus normalerweise auch auf einem neuronalen Netzwerk basiert.
Es gibt auch elementare Embedding-Algorithmen, aber diese sind praktisch weniger nutzbar.
Es gibt komplexere Embedding-Systeme, die auf neuronalen Netzwerken basieren und dies je nach Sprache tun.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;14-auswahl-relevanter-textstücke&quot;&gt;14. Auswahl relevanter Textstücke&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Die Vektordatenbank teilt uns mit, welche Textstücke aus unserer Wissensbasis der Frage nahe sind, was bedeutet, dass sie für die Beantwortung der Frage relevant sind.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;15-zusammenstellung-des-prompts&quot;&gt;15. Zusammenstellung des Prompts&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Danach bitten wir das LLM um einen Prompt, der nicht das Original ist, sondern wir stellen ihm die Textstücke voran, die wir aus unserer eigenen Wissensbasis extrahiert haben.
Wir können nicht das Ganze in eine Frage packen, weil es zu viel wäre, aber wir können einige, fünf, sechs, sieben oder sogar zehn aus der Wissensbasis einbeziehen.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Wir schreiben in den Prompt, dass dies ein Kontext ist, und wir möchten die Antwort in diesem Kontext erhalten, dann die Frage selbst.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;16-zusammenfassung-des-rag-prozesses&quot;&gt;16. Zusammenfassung des RAG-Prozesses&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Dann senden wir dies an den LLM-Algorithmus, der es liest, etwas damit macht und es beantwortet.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Und das ist es.
Der ganze RAG ist so einfach.
Man braucht eine Vektordatenbank; man muss den Text zerschneiden.
Wenn jemand Programmierung versteht, weiß er, dass dies keine große Sache ist.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Wir müssen den Text in eine normale Datenbank einfügen, damit wir ihn für die Prompt-Generierung wiederherstellen können.
Wir legen die Vektoren in die Vektordatenbank, damit wir fragen können, welche die relevanten Textstücke für eine bestimmte Frage sind.
Dann müssen wir in der Lage sein, dem LLM Fragen aus einem Programm zu stellen und Standardschnittstellen zu programmieren.
Schließlich müssen wir in der Lage sein, die Antwort an den Kunden oder Benutzer zurückzusenden, der sie lesen kann.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;17-zusammenfassung&quot;&gt;17. Zusammenfassung&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Mit dieser Technologie haben wir eine Anwendung erstellt, mit der man genauso chatten kann wie mit ChatGPT.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Aber sie kennt nicht nur die Dinge der großen Welt bis zu einem bestimmten Zeitpunkt, als ihr Training abgeschlossen wurde, sondern auch die Dinge in unserer speziellen Wissensbasis.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">1. Einleitung</summary></entry><entry><title type="html">Az LLM és a RAG technológia</title><link href="https://javax0.github.io/2024/07/22/llm-and-rag-hu.html" rel="alternate" type="text/html" title="Az LLM és a RAG technológia" /><published>2024-07-22T00:00:00+02:00</published><updated>2024-07-22T00:00:00+02:00</updated><id>https://javax0.github.io/2024/07/22/llm-and-rag-hu</id><content type="html" xml:base="https://javax0.github.io/2024/07/22/llm-and-rag-hu.html">&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;1-bevezetés&quot;&gt;1. Bevezetés&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Ez a cikk egy rövid bevezető az LLM és a RAG technológiába.
A cikk sok egyszerűsítést tartalmaz, a célja, hogy a laikusok számára is érthető legyen.
Ha részletesebben érdekel a technológia, akkor ez a cikk nem lesz elég, sőt találhatsz benne olyan részeket amik nem teljesen pontosak, bár a lényeget jól átadják.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;2-a-rag-technológia-lényege&quot;&gt;2. A RAG technológia lényege&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Az RAG a Retrieval Augmented Generation rövidítése.
Ez egy angol betűszó.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Ez a technológia próbálja kiegészíteni az LLM, azaz a Large Language Model alkalmazásokat.
A cél, hogy képesek legyenek kezelni olyan tudásbázist, olyan tudást, amely a Large Language Modelben magában nem található meg.
A Large Language Model önmagában egy olyan neurális hálózat, amit valamilyen módon tréningeztek.
Általában olyan adatokkal tréningezik, amelyek szabadon rendelkezésre állnak az interneten, igen nagy mennyiségben.
Ennek hatására a Large Language Modelek szinte emberi módon képesek kommunikálni.
Ha valamilyen kérdést felteszünk nekik, akkor erre tudnak válaszolni.
De fogalmuk sincs arról, milyen adatok vagy információk vannak egy vállalaton belül, hiszen ezek nem publikus adatok.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;3-az-llm-ek-korlátai&quot;&gt;3. Az LLM-ek korlátai&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Az LLM nem tanítható meg a mostani formában ezekre a vállalati információkra.
A jelenleg rendelkezésre álló alkalmazások úgy működnek, hogy a fejlesztők kialakítanak valamilyen modellt.
Utána trénelik ezt a modellt, több millió vagy milliárd paramétert állítanak be a tréning adatokkal.
Kérdéseket tesznek fel neki, jönnek a válaszok, és akkor a válaszok minősége alapján állítgatják ezeket a paramétereket.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Természetesen nem kézzel - erre vannak programok és algoritmusok.
Ez a folyamat néhány hónap alatt készül el a mostani viszonyok között, egy kisebb város energiaigényét felhasználva.
Sok ezer gépen futtatják ezt a finomhangoló algoritmust.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;4-az-llm-modellek-jellemzői&quot;&gt;4. Az LLM modellek jellemzői&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Amikor ez készen van, a modell letölthető és futtatható egy saját gépen.
Maga a modell 1-2 GB-nyi adatot jelent.
Ezután ez a neurális hálózat már nem változik, nem tanul meg új dolgokat.
Csak akkor tud új dolgot megtanulni, ha kapunk belőle egy új változatot.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;5-a-rag-technológia-alkalmazása&quot;&gt;5. A RAG technológia alkalmazása&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Mégis szeretnénk ezt a fajta lehetőséget egy cégen belül használni.
Azt szeretnénk, hogy ha egy kérdést felteszünk ennek a neurális hálózatnak, az LLM modellnek, akkor olyan választ adjon, ami figyelembe veszi a saját cégünk belső információit.
Ezt úgy tudjuk megtenni, mintha egy emberrel is ilyesmit csinálnánk.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Ha jön valaki a céghez, és kérdéseket akarunk neki feltenni a céggel kapcsolatban, de nem tud semmit a cégünkről, akkor először megtanítjuk dolgokra, információkat adunk neki.
Ő ezeket az információkat el fogja tenni a saját neurális hálójába.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;6-a-rag-működési-elve&quot;&gt;6. A RAG működési elve&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Gondolhatjuk úgy, hogy fókuszálva a munkára, amikor hazamegy, minden mást elfelejtett, és ezeket a cégspecifikus információkat egy külön helyre rakja el.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Az LLM-nél és a RAG-nál is ez a modell.
Azokat az információkat, amik nincsenek benne az LLM neurális hálójában, külön rakjuk el egy külön adatbázisba.
Ha másért nem, azért, mert magának a neurális hálónak az adatbázisába, a modelljébe nem tudjuk beletenni.
Ezek nem publikusak, nem tudjuk, hogyan néznek ki, hogyan épülnek fel, és nem is feltétlenül módosíthatók már abban a formában, ahogyan a programban benne vannak.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Nincs meg, mondhatjuk talán így, hogy az adatok &quot;forráskódja&quot; - nem feltétlenül a program forráskódja, hanem az adatok eredeti formája.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;7-az-llm-modell-jellemzői&quot;&gt;7. Az LLM modell jellemzői&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Ez a modell több lépcsőn keresztül lesz végül is egy 1 GB-os, tehát aránylag kicsinek tekinthető adathalmaz.
Relatív, hogy mi a kicsi, de egy LLM értelemben ez kicsinek tekinthető.
És nem biztos, hogy ez még olyan állapotban van, ami módosítható.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;8-vektoradatbázisok-használata&quot;&gt;8. Vektoradatbázisok használata&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Ha egy külön adatbázisba akarjuk betenni azokat az információkat, amik saját információk, akkor erre úgynevezett vektoradatbázist szokás használni.
A vektoradatbázis egy speciális olyan alkalmazás, ami két szövegdarabról meg tudja mondani, hogy mennyire vannak közel egymáshoz.
Tehát mennyire szólnak ugyanarról, mennyire ugyanazok a kulcsszavak benne.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;9-a-tudásbázis-előkészítése&quot;&gt;9. A tudásbázis előkészítése&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A tudásbázist, ami a cégen belül rendelkezésre áll, felszabdaljuk szövegdarabokra.
Ezek a szövegdarabok tipikusan ezer karakter, ezer betű hosszúságúak, és ezek képeznek egy-egy rekordot.
Van közöttük egy kis átfedés, tehát nem ott kezdjük a következőt, ahol az előzőnek vége szakadt, hanem egy kicsit előbb.
Ez azért van, hogy legyen egyfajta kontextus és folyamatosság a szövegben.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;10-az-embedding-algoritmus&quot;&gt;10. Az embedding algoritmus&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Minden egyes ilyen szövegdarabot elteszünk egy adatbázisba, és megkérünk egy úgynevezett embedding algoritmust, hogy a szövegdarabhoz rendeljen hozzá egy úgynevezett vektort.
A vektor egy számsorozat.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Ez hasonló ahhoz, mint például egy GPS koordináta.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Tulajdonképpen ez a vektor ennek a darab szövegnek egy térbeli koordinátája, de ez a tér nem háromdimenziós, hanem nagyon sokdimenziós.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;11-a-rag-működése-kérdések-esetén&quot;&gt;11. A RAG működése kérdések esetén&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Amikor feltesz egy kérdést a felhasználó a RAG technológiával fejlesztett alkalmazásnak, akkor ezt a kérdést is vektorizáljuk.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Megkérjük az embeddings rendszert, hogy mondja meg, hogy a térben hol helyezkedik el ez a kérdés.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;És utána a vektoradatbázistól, amibe beleraktuk az összes szövegdarabunkhoz tartozó vektorokat, meg tudjuk kérdezni, hogy melyek azok a szövegdarabok a mi tudásbázisunkból, amelyek a legközelebb vannak térben a kérdéshez.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;12-a-vektorok-közötti-távolságszámítás&quot;&gt;12. A vektorok közötti távolságszámítás&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Ez egy távolságszámolás és egyfajta indexelés.
Ha úgy tetszik, Pitagorasz-tétellel lehet számolni a távolságot egy ortogonális vektor térben.
Bonyolultnak hangzik, nem is kell vele igazából foglalkozni, nem kell tudnunk, hogy ez hogyan működik.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;13-az-embedding-algoritmus-jellemzői&quot;&gt;13. Az embedding algoritmus jellemzői&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A lényeg az, hogy ez az embedding algoritmus, ami amúgy szintén egy neurális hálón szokott alapulni.
Vannak nagyon egyszerű embedding algoritmusok is, ezek praktikusan kevésbé használhatóak.
De vannak olyan bonyolultabb neurális hálók, amik ezt megteszik, nyelvtől függően.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;14-a-releváns-szövegdarabok-kiválasztása&quot;&gt;14. A releváns szövegdarabok kiválasztása&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A vektoradatbázis megmondja, hogy melyek azok a szövegdarabok a mi tudásbázisunkból, amelyek közel vannak a kérdéshez, vagyis relevánsak a kérdés megválaszolásához.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;15-a-prompt-összeállítása&quot;&gt;15. A prompt összeállítása&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Ezek után az LLM-től mi egy olyan promptot kérdezünk, ami nem az eredeti prompt, hanem elé betesszük azokat a szövegdarabokat, amelyeket kiszedtünk a saját tudásbázisunkból.
Az egészet nem tehetjük be egy kérdésbe, mert az túl sok lenne, de néhányat, ötöt, hatot, hetet, vagy akár tizet be tudunk tenni a tudásbázisból.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Beleírjuk a promptba, hogy ez egy kontextus, és a választ ebben a kontextusban szeretnénk megkapni, majd magát a kérdést.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;16-a-rag-folyamat-összefoglalása&quot;&gt;16. A RAG folyamat összefoglalása&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Utána ezt elküldjük az LLM algoritmusnak, ami ezt elolvassa, csinál vele valamit, megválaszolja.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;És tulajdonképpen ez az egész RAG ennyire egyszerű.
Kell hozzá egy vektoradatbázis, föl kell darabolnunk a szöveget.
Ha valaki ért a programozáshoz, az tudja, hogy ez nem egy olyan nagy dolog.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Bele kell tenni egy normál adatbázisba magát a szöveget, hogy magát a szöveget a prompt gyártásához vissza tudjuk állítani.
Beletesszük a vektorokat a vektoradatbázisba, hogy meg tudjuk kérdezni, hogy melyik a releváns szövegdarabok egy adott kérdéshez.
Utána egy programból föl kell tudnunk tenni a kérdést az LLM-nek, standard interfészeket kell tudni programozni.
Végül a választ vissza kell tudni küldeni az ügyfélnek, felhasználónak, aki ezt el tudja olvasni.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;17-összegzés&quot;&gt;17. Összegzés&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;És ezzel a technológiával elő tudtunk állítani egy olyan alkalmazást, amelyikkel ugyanúgy lehet csetelni, mint a ChatGPT-vel.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;De nem csak a nagyvilág dolgait tudja egy adott időpillanatig, amikor is lezárták a tréningét, hanem tudja azokat a dolgokat is, amik a mi speciális tudásbázisunkban vannak benne.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">1. Bevezetés</summary></entry><entry><title type="html">Threaded streams</title><link href="https://javax0.github.io/2024/02/29/threaded-stream.html" rel="alternate" type="text/html" title="Threaded streams" /><published>2024-02-29T00:00:00+01:00</published><updated>2024-02-29T00:00:00+01:00</updated><id>https://javax0.github.io/2024/02/29/threaded-stream</id><content type="html" xml:base="https://javax0.github.io/2024/02/29/threaded-stream.html">&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;1-introduction&quot;&gt;1. Introduction&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the landscape of software development, efficiently processing large datasets has become paramount, especially with the advent of multicore processors.
The Java Stream interface provided a leap forward by enabling sequential and parallel operations on collections.
However, fully exploiting modern processors&apos; capabilities while retaining the Stream API&amp;#8217;s simplicity posed a challenge.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Responding to this, I created an open-source library aimed at experimenting with a new method of parallelizing stream operations.
This library diverges from traditional batching methods by processing each stream element in its own virtual thread, offering a more refined level of parallelism.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In this article, I will talk about the library, and its design.
It is more detail than you need simply to use the library.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The library is available on GitHub at &lt;a href=&quot;https://github.com/verhas/vtstream&quot; class=&quot;bare&quot;&gt;https://github.com/verhas/vtstream&lt;/a&gt; and also as a dependency in Maven Central.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;com.github.verhas&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;vtstream&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;1.0.1&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Check out the actual version number on the Maven Central site or on GitHub.
This article is based on the version 1.0.1 of the library.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;2-parallel-computing&quot;&gt;2. Parallel Computing&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Parallel computing is not a new thing.
It has been around for decades.
The first computers were executing tasks in batches, hence in a serial way, but soon the idea of time-sharing came into picture.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The first time-sharing computer system was installed in 1961 at the Massachusetts Institute of Technology (MIT).
This system, known as the Compatible Time-Sharing System (CTSS), allowed multiple users to log into a mainframe computer simultaneously, working in what appeared to be a private session.
CTSS was a groundbreaking development in computer science, laying the foundation for modern operating systems and computing environments that support multitasking and multi-user operations.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This was not a parallel computing system, per se.
CTSS was designed to run on a single mainframe computer, the IBM 7094, at MIT.
It has one CPU, thus the code was executed in a serial way.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Today we have multicore processors and multiple processors in a single computer.
I edit this article on a computer that has 10 processor cores.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To execute tasks concurrently, there are two plus one approaches:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;define the algorithm in a concurrent way, for example, reactive programming, or&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;define the algorithm the good old sequential way and let some program decide on the concurrency, or&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;mix the two.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When we&amp;#8217;re programming some reactive algorithm, or defined streams as in Java 8 stream, we help the application to execute the tasks concurrently.
We define small parts and their interdependence so that the environment can decide which parts can be executed concurrently.
The actual execution is done by the framework and when we are using&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;virtual threads, or&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;threads (perhaps processes)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;the difference is in the scheduler.
Who makes the decision which processor should execute which task the next moment.
In the case of threads or processes, the executor is the operating system.
The difference between the thread and process execution is that threads belonging to the same process share the same memory space.
Processes have their own memory space.
Similarly, virtual threads belonging to the same operating system thread share the same stack.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Transitioning from processes to virtual threads, we encounter a reduction in shared resources and, consequently, overhead.
This makes virtual threads significantly less costly compared to traditional threads.
While a machine might support thousands of threads and processes, it can accommodate millions of virtual threads.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In defining a task with streams, you are essentially outlining a series of operations to be performed on multiple elements.
The decision to execute these operations concurrently rests with the framework, which may or may not choose to do so.
However, &lt;code&gt;Stream&lt;/code&gt; in Java serves as a high-level interface, offering us the flexibility to implement a version that facilitates concurrent execution of tasks.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;3-implementing-streams-in-threads&quot;&gt;3. Implementing Streams in Threads&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The library contains two primary classes located in the main directory, namely:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ThreadedStream&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Command&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;code&gt;ThreadedStream&lt;/code&gt; is the class responsible for implementing the &lt;code&gt;Stream&lt;/code&gt; interface.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;public class ThreadedStream&amp;lt;T&amp;gt; implements Stream&amp;lt;T&amp;gt; {&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;code&gt;Command&lt;/code&gt; class encompasses nested classes that implement functionality for stream operations.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    public static class Filter&amp;lt;T&amp;gt; extends Command&amp;lt;T, T&amp;gt; {
    public static class AnyMatch&amp;lt;T&amp;gt; extends Command&amp;lt;T, T&amp;gt; {
    public static class FindFirst&amp;lt;T&amp;gt; extends Command&amp;lt;T, T&amp;gt; {
    public static class FindAny&amp;lt;T&amp;gt; extends Command&amp;lt;T, T&amp;gt; {
    public static class NoOp&amp;lt;T&amp;gt; extends Command&amp;lt;T, T&amp;gt; {
    public static class Distinct&amp;lt;T&amp;gt; extends Command&amp;lt;T, T&amp;gt; {
    public static class Skip&amp;lt;T&amp;gt; extends Command&amp;lt;T, T&amp;gt; {
    public static class Peek&amp;lt;T&amp;gt; extends Command&amp;lt;T, T&amp;gt; {
    public static class Map&amp;lt;T, R&amp;gt; extends Command&amp;lt;T, R&amp;gt; {&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;All the mentioned operators are intermediary.
The terminal operators are implemented within the &lt;code&gt;ThreadedStream&lt;/code&gt; class, which converts the threaded stream into a regular stream before invoking the terminal operator on this stream.
An example of this approach is the implementation of the &lt;code&gt;collect&lt;/code&gt; method.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    @Override
    public &amp;lt;R&amp;gt; R collect(Supplier&amp;lt;R&amp;gt; supplier, BiConsumer&amp;lt;R, ? super T&amp;gt; accumulator, BiConsumer&amp;lt;R, R&amp;gt; combiner) {
        return toStream().collect(supplier, accumulator, combiner);
    }&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The source of the elements is also a stream, which means that the threading functionality is layered atop the existing stream implementation.
This setup allows for the utilization of streams both as data sources and as destinations for processed data.
Threading occurs in the interim, facilitating the parallel execution of intermediary commands.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Therefore, the core of the implementation—and its most intriguing aspect—lies in the construction of the structure and its subsequent execution.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We will first examine the structure of the stream data and then explore how the class executes operations utilizing virtual threads.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;3-1-stream-data-structure&quot;&gt;3.1. Stream Data Structure&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;code&gt;ThreadedStream&lt;/code&gt; class maintains its data through the following member variables:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    private final Command&amp;lt;Object, T&amp;gt; command;
    private final ThreadedStream&amp;lt;?&amp;gt; downstream;
    private final Stream&amp;lt;?&amp;gt; source;
    private long limit = -1;
    private boolean chained = false;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;command&lt;/code&gt; represents the &lt;code&gt;Command&lt;/code&gt; object to be executed on the data.
It might be a no-operation (NoOp) command or &lt;code&gt;null&lt;/code&gt; if there is no specific command to execute.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;downstream&lt;/code&gt; variable points to the preceding &lt;code&gt;ThreadedStream&lt;/code&gt; in the processing chain.
A &lt;code&gt;ThreadedStream&lt;/code&gt; retrieves data either from the immediate &lt;code&gt;downstream&lt;/code&gt; stream, if available, or directly from the &lt;code&gt;source&lt;/code&gt; if it&amp;#8217;s the initial in the chain.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;source&lt;/code&gt; is the initial data stream.
It remains defined even when a &lt;code&gt;downstream&lt;/code&gt; is specified, in which scenario the &lt;code&gt;source&lt;/code&gt; for both streams remains identical.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;limit&lt;/code&gt; specifies the maximum number of elements this stream is configured to process.
Implementing a limit requires a workaround, as stream element processing starts immediately rather than being &quot;pulled&quot; by the terminal operation.
Consequently, infinite streams cannot feed into a &lt;code&gt;ThreadedStream&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;chained&lt;/code&gt; is a boolean flag indicating whether the stream is part of a processing chain.
When &lt;code&gt;true&lt;/code&gt;, it signifies that there is a subsequent stream dependent on this one&amp;#8217;s output, preventing execution in cases of processing forks.
This mechanism mirrors the approach found in JVM&amp;#8217;s standard stream implementations.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;3-2-stream-build&quot;&gt;3.2. Stream Build&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The stream data structure is constructed dynamically as intermediary operations are chained together.
The initiation of this process begins with the creation of a starting element, achieved by invoking the static method &lt;code&gt;threaded&lt;/code&gt; on the &lt;code&gt;ThreadedStream&lt;/code&gt; class.
An exemplary line from the unit tests illustrates this initiation:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;        final var k = ThreadedStream.threaded(Stream.of(1, 2, 3));&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This line demonstrates the creation of a &lt;code&gt;ThreadedStream&lt;/code&gt; instance named &lt;code&gt;k&lt;/code&gt;, initialized with a source stream consisting of the elements 1, 2, and 3.
The &lt;code&gt;threaded&lt;/code&gt; method serves as the entry point for transforming a regular stream into a &lt;code&gt;ThreadedStream&lt;/code&gt;, setting the stage for further operations that can leverage virtual threads for concurrent execution.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When an intermediary operation is appended, it results in the creation of a new &lt;code&gt;ThreadedStream&lt;/code&gt; instance.
This new instance designates the preceding &lt;code&gt;ThreadedStream&lt;/code&gt; as its &lt;code&gt;downstream&lt;/code&gt;.
Moreover, the source stream for this newly formed &lt;code&gt;ThreadedStream&lt;/code&gt; remains identical to the source stream of its predecessor.
This design ensures a seamless flow of data through the chain of operations, facilitating efficient processing in a concurrent environment.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For example, when we call&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;        final var t = k.map(x -&amp;gt; x * 2);&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;the &lt;code&gt;map&lt;/code&gt; method is called, which is&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    public &amp;lt;R&amp;gt; ThreadedStream&amp;lt;R&amp;gt; map(Function&amp;lt;? super T, ? extends R&amp;gt; mapper) {
        return new ThreadedStream&amp;lt;&amp;gt;(new Command.Map&amp;lt;&amp;gt;(mapper), this);
    }&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It generates a new &lt;code&gt;ThreadedStream&lt;/code&gt; object wherein the preceding &lt;code&gt;ThreadedStream&lt;/code&gt; acts as the &lt;code&gt;downstream&lt;/code&gt;.
Additionally, the &lt;code&gt;command&lt;/code&gt; field is populated with a new instance of the &lt;code&gt;Command&lt;/code&gt; class, configured with the specified mapper function.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This process effectively constructs a linked list composed of &lt;code&gt;ThreadedStream&lt;/code&gt; objects.
This linked structure comes into play during the execution phase, triggered by invoking one of the terminal operations on the stream.
This method ensures that each &lt;code&gt;ThreadedStream&lt;/code&gt; in the sequence can process data in a manner that supports concurrent execution, leveraging the capabilities of virtual threads for efficient data processing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It&amp;#8217;s crucial to understand that the &lt;code&gt;ThreadedStream&lt;/code&gt; class refrains from performing any operations on the data until a terminal operation is called.
Once execution commences, it proceeds concurrently.
To facilitate independent execution of these operations, &lt;code&gt;ThreadedStream&lt;/code&gt; instances are designed to be immutable.
They are instantiated during the setup phase and undergo a single mutation when they are linked together.
During execution, these instances serve as a read-only data structure, guiding the flow of operation execution.
This immutability ensures thread safety and consistency throughout concurrent processing, allowing for efficient and reliable stream handling.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;3-3-stream-execution&quot;&gt;3.3. Stream Execution&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The commencement of stream execution is triggered by invoking a terminal operation.
These terminal operations are executed by first transforming the threaded stream back into a conventional stream, upon which the terminal operation is then performed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;code&gt;collect&lt;/code&gt; method serves as a prime example of this process, as previously mentioned.
This method is emblematic of how terminal operations are seamlessly integrated within the &lt;code&gt;ThreadedStream&lt;/code&gt; framework, bridging the gap between concurrent execution facilitated by virtual threads and the conventional stream processing model of Java.
By converting the &lt;code&gt;ThreadedStream&lt;/code&gt; into a standard &lt;code&gt;Stream&lt;/code&gt;, it leverages the rich ecosystem of terminal operations already available in Java, ensuring compatibility and extending functionality with minimal overhead.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    @Override
    public &amp;lt;R&amp;gt; R collect(Supplier&amp;lt;R&amp;gt; supplier, BiConsumer&amp;lt;R, ? super T&amp;gt; accumulator, BiConsumer&amp;lt;R, R&amp;gt; combiner) {
        return toStream().collect(supplier, accumulator, combiner);
    }&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;code&gt;toStream()&lt;/code&gt; method represents the core functionality of the library, marking the commencement of stream execution by initiating a new virtual thread for each element in the source stream.
This method differentiates between ordered and unordered execution through two distinct implementations:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;toUnorderedStream()&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;toOrderedStream()&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The choice between these methods is determined by the &lt;code&gt;isParallel()&lt;/code&gt; status of the source stream.
It&amp;#8217;s worth noting that executing an ordered stream in parallel can be advantageous.
Although the results may be produced out of order, parallel processing accelerates the operation.
Ultimately, care must be taken to collect the results in a sequential manner, despite the unordered processing potentially yielding higher efficiency by allowing elements to be passed to the resulting stream as soon as they become available, eliminating the need to wait for the preceding elements.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The implementation of &lt;code&gt;toStream()&lt;/code&gt; is designed to minimize an unnecessary collection of elements.
Elements are forwarded to the resulting stream immediately upon readiness in the case of unordered streams, and in sequence upon the readiness and previous element&amp;#8217;s forwarding in ordered streams.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In subsequent sections, we delve into the specifics of these two execution methodologies.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;3-4-unordered-stream-execution&quot;&gt;3.4. Unordered Stream Execution&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Unordered execution promptly forwards results as they become prepared.
This approach employs a concurrent list for result storage, facilitating simultaneous result deposition by threads and retrieval by the target stream, preventing excessive list growth.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The iteration over the source stream initiates the creation of a new virtual thread for each element.
When a limit is imposed, it&amp;#8217;s applied directly on the source stream, diverging from traditional stream implementations where &lt;code&gt;limit&lt;/code&gt; acts as a genuine intermediary operation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The implementation of the unordered stream execution is as follows:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    private Stream&amp;lt;T&amp;gt; toUnorderedStream() {
        final var result = Collections.synchronizedList(new LinkedList&amp;lt;Command.Result&amp;lt;T&amp;gt;&amp;gt;());
        final AtomicInteger n = new AtomicInteger(0);
        final Stream&amp;lt;?&amp;gt; limitedSource = limit &amp;gt;= 0 ? source.limit(limit) : source;
        limitedSource.forEach(
                t -&amp;gt; {
                    Thread.startVirtualThread(() -&amp;gt; result.add(calculate(t)));
                    n.incrementAndGet();
                });
        return IntStream.range(0, n.get())
                .mapToObj(i -&amp;gt; {
                    while (result.isEmpty()) {
                        Thread.yield();
                    }
                    return result.removeFirst();
                })
                .filter(f -&amp;gt; !f.isDeleted())
                .peek(r -&amp;gt; {
                    if (r.exception() != null) {
                        throw new ThreadExecutionException(r.exception());
                    }
                })
                .map(Command.Result::result);
    }&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The counter &lt;code&gt;n&lt;/code&gt; is utilized to tally the number of threads initiated.
The resulting stream is constructed using this counter by mapping the numbers 0 to &lt;code&gt;n&lt;/code&gt;-1 to the elements of the concurrent list as they become ready.
If the list lacks elements at any point, the process pauses, awaiting the availability of the next element.
This waiting mechanism is implemented within a loop that incorporates a &lt;code&gt;yield&lt;/code&gt; call to prevent unnecessary CPU consumption by halting the loop&amp;#8217;s execution until it&amp;#8217;s necessary to proceed.
This efficient use of resources ensures that the system remains responsive and minimizes the potential for performance degradation during the execution of parallel tasks.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;3-5-ordered-stream-execution&quot;&gt;3.5. Ordered Stream Execution&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Ordered stream execution introduces a more nuanced approach compared to its unordered counterpart.
It incorporates a local class named &lt;code&gt;Task&lt;/code&gt;, designed specifically to await the readiness of a particular thread.
Similar to the unordered execution, a concurrent list is utilized, but with a key distinction: the elements of this list are the tasks themselves, rather than the results.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This list is populated by the code responsible for thread creation, rather than by the threads themselves.
The presence of a fully populated list eliminates the need for a separate counter to track thread initiation.
Consequently, the process transitions to sequentially waiting on each thread as dictated by their order in the list, thereby ensuring that each thread&amp;#8217;s output is relayed to the target stream in a sequential manner.
This method meticulously maintains the ordered integrity of the stream&amp;#8217;s elements, despite the concurrent nature of their processing, by aligning the execution flow with the sequence of the original stream.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    private Stream&amp;lt;T&amp;gt; toOrderedStream() {
        class Task {
            Thread workerThread;
            volatile Command.Result&amp;lt;T&amp;gt; result;

            /**
             * Wait for the thread calculating the result of the task to be finished. This method is blocking.
             * @param task the task to wait for
             */
            static void waitForResult(Task task) {
                try {
                    task.workerThread.join();
                } catch (InterruptedException e) {
                    task.result = deleted();
                }
            }
        }
        final var tasks = Collections.synchronizedList(new LinkedList&amp;lt;Task&amp;gt;());

        final Stream&amp;lt;?&amp;gt; limitedSource = limit &amp;gt;= 0 ? source.limit(limit) : source;
        limitedSource.forEach(
                sourceItem -&amp;gt; {
                    Task task = new Task();
                    tasks.add(task);
                    task.workerThread = Thread.startVirtualThread(() -&amp;gt; task.result = calculate(sourceItem));
                }
        );

        return tasks.stream()
                .peek(Task::waitForResult)
                .map(f -&amp;gt; f.result)
                .peek(r -&amp;gt; {
                            if (r.exception() != null) {
                                throw new ThreadExecutionException(r.exception());
                            }
                        }
                )
                .filter(r -&amp;gt; !r.isDeleted()).map(Command.Result::result);
    }&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;4-summary-and-takeaway&quot;&gt;4. Summary and Takeaway&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Having explored an implementation that facilitates the parallel execution of stream operations, it&amp;#8217;s noteworthy that this library is open source, offering you the flexibility to either utilize it as is or reference its design and implementation to craft your own version.
The detailed exposition provided here aims to shed light on both the conceptual underpinnings and practical aspects of the library&amp;#8217;s construction.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;However, it&amp;#8217;s important to acknowledge that the library has not undergone extensive testing.
It received a review from Istvan Kovacs, a figure with considerable expertise in concurrent programming.
Despite this, his review does not serve as an absolute assurance of the library&amp;#8217;s reliability and absence of bugs.
Consequently, should you decide to integrate this library into your projects, it&amp;#8217;s advised to proceed with caution and conduct thorough testing to ensure it meets your requirements and standards.
The library is provided &quot;as is,&quot; with the understanding that users adopt it at their own risk, underpinning the importance of due diligence in its deployment.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">1. Introduction</summary></entry><entry><title type="html">Cloud Solutions are Expensive, or are they?</title><link href="https://javax0.github.io/2023/11/12/cloud-price.html" rel="alternate" type="text/html" title="Cloud Solutions are Expensive, or are they?" /><published>2023-11-12T00:00:00+01:00</published><updated>2023-11-12T00:00:00+01:00</updated><id>https://javax0.github.io/2023/11/12/cloud-price</id><content type="html" xml:base="https://javax0.github.io/2023/11/12/cloud-price.html">&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;1-introduction&quot;&gt;1. Introduction&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Cloud solutions are becoming increasingly prevalent.
I&amp;#8217;ve observed their adoption even among companies that were traditionally very conservative.
Previously, these organizations insisted that no data leave their premises, operating all applications within data centers safeguarded by two-meter-thick, steel-reinforced concrete walls.
However, these companies are now beginning to explore and adopt cloud solutions, simultaneously becoming aware of the true costs associated with cloud computing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In this article, I will delve into the costs associated with cloud solutions.
While this is not a technical piece, a basic understanding of cloud computing might be beneficial, though I will aim to provide an overview rather than delve into technical specifics.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Additionally, those with a background in economics might find this discussion particularly insightful, as we will be exploring the costs, prices, and the underlying structures that influence them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As the author of this article, I bring a unique perspective, combining my experience as a senior software architect with my educational background, holding an MBA degree and possessing a foundational understanding of economics.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;2-the-price-of-cloud&quot;&gt;2. The price of cloud&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Companies that perceive cloud solutions as expensive have valid concerns.
Utilizing cloud services comes with a cost, and given that pricing is typically based on usage, expenses can escalate quickly.
If your company already possesses servers on-premises or hosted in a data center, maintaining these setups might be more cost-effective than transitioning to the cloud.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There are specific scenarios where the cost factor makes cloud usage less favorable.
Conversely, there are also situations where opting for a cloud solution can be highly advantageous.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Let&amp;#8217;s examine an example to illustrate this point.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;2-1-architecture-test&quot;&gt;2.1. Architecture test&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In a project we undertook, we proposed a unique solution involving a JDBC proxy for a client.
This JDBC proxy was a special application that acted like a database server.
However, instead of storing data itself, it forwarded SQL queries to multiple, different database servers.
This setup was necessary because the application required data to be inserted into different databases during a multi-year database migration.
The client requested a proof of concept, necessitating a test environment with six Linux servers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Renting these servers was not only costly but also challenging, given our location in a small country in Central Europe.
While purchasing servers was standard, acquiring them for just a few days was an unusual requirement.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Eventually, we approached a company where we knew the director and proposed a unique arrangement during a &quot;lunch&quot; meeting:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;We need six servers for a few days.
I know you always ship servers to your customers.
Can we rent them for a few days?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We do not rent servers.
We sell them.
Also, our delivery line is always on pressure, as soon as the servers come in, we install them and ship them out.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Do you ship them also during the weekends?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;No, of course not, our client offices are closed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;So if you have six servers that arrive on Friday, you will not ship them until Monday?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Yes.
That is correct.
To be more precise, we will ship them only on Tuesday, because we have to install them on Monday.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;How about we take them for the weekend, we do the testing, and you get them back installed early Monday?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This arrangement was a win-win, but it relied heavily on our business network and negotiating skills.
Without this connection, we would have faced significant costs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Today the solution would be much simpler and cost-effective:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You would specify the required hardware using YAML format, register with a cloud provider, start up a Kubernetes (K8s) cluster, upload the objects, and have your servers ready.
This overlooks the minor details of containers and applications, but these are relatively straightforward.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;My estimate is that the total cost for this modern setup would be around or less than $50. In contrast, the official quote we received for a weekend rental of six servers from a large company at that time was around $3,000.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This scenario clearly demonstrates the cost-effectiveness and convenience of cloud solutions.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;3-the-economy-of-the-cloud&quot;&gt;3. The economy of the cloud&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There are indeed specific costs that influence the pricing of cloud solutions.
A cloud provider incurs expenses for hardware, electricity, cooling systems, network infrastructure, data center facilities, as well as salaries for personnel who install, maintain the hardware, and develop the software that operates the cloud.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The notion that &quot;all these costs are included in the price you pay for the cloud&quot; encapsulates a common perception.
This sentence between the quotes was suggested by GitHub Copilot.
This fact, the suggestion reflects what many people believe about costs.
I have encountered this mindset frequently across various social media platforms and in diverse groups.
It underscores a general misunderstanding that the fees paid depend on the underlying expenses associated with providing the services.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The price does not come from the costs.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The pricing of products and services, including cloud solutions, is indeed influenced by costs, but it is not solely determined by them.
Costs limit the price, as we will see shortly.
The primary drivers of price are demand and supply.
Essentially, clients are willing to pay a price that they deem worthwhile for the service or product they receive.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If the price that customers are willing to pay falls below the cost of providing the service or product, suppliers typically will not offer it.
This economic principle highlights the balance that must be struck in the market: prices need to be high enough to cover costs and generate a profit for suppliers, yet remain low enough to be acceptable to consumers.
This dynamic equilibrium is a fundamental aspect of market economics and is particularly relevant in the context of cloud computing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When you begin studying economics, you&amp;#8217;re introduced to a basic market model where price is often viewed as a function of supply and demand.
However, in practical scenarios, pricing is commonly calculated with consideration to costs.
For instance, when you have your car repaired, the bill typically itemizes the costs of parts and labor.
Yet, in economic terms, such a bill doesn&amp;#8217;t fully represent the truth.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The prices listed for parts and labor often include an &quot;uplift&quot; – a markup that covers additional expenses and profit.
This markup is a standard practice in business; it&amp;#8217;s a way of communicating and playing the game within the market.
The invoice you receive doesn&amp;#8217;t usually break down every cost component, such as office heating, electricity, or even indirect costs like a bribe paid to a security inspector.
Moreover, the profit margin, which can be seen as the cost of the money invested, is also embedded in these prices.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This practice is akin to a card game where all players understand that some level of strategy – or &quot;cheating,&quot; in this metaphor – is part of the game.
If everyone is aware of and engages in these strategies, it becomes a level playing field.
Similarly, in business, while the invoice might not explicitly list every cost or the exact profit margin, there&amp;#8217;s an understanding that these elements are inherently included in the prices charged.
This system of pricing, while not always transparent, is a fundamental aspect of how businesses operate and cover their costs while earning a profit.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When prices in a market are heavily influenced by costs, it typically indicates a highly competitive environment.
However, the fundamental economic principle of price being driven by supply and demand still holds true.
In such markets, there&amp;#8217;s often a dynamic feedback loop that affects supply.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If a particular service or product can be sold with a high profit margin, it naturally attracts more suppliers who want to capitalize on this opportunity.
This influx of suppliers increases the supply, which, over time, can lead to a decrease in prices until the profit margin aligns more closely with the cost of market entry and investment.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;However, entering a market isn&amp;#8217;t always straightforward or quick.
During the period it takes for new suppliers to establish themselves, existing suppliers may enjoy a monopolistic or oligopolistic position.
In such scenarios, these incumbent suppliers have the leverage to set prices at a level that maximizes their profits.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This is notably evident in the cloud computing industry.
In my opinion, cloud providers are in an oligopolistic situation.
The market is dominated by a few major players, and their significant presence and control allow them to influence pricing.
This oligopolistic market structure enables these providers to set prices that are not just cost-driven but also strategically aligned with maximizing their profits, considering the competitive landscape and the value they offer to their customers.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;4-is-the-price-right-for-you&quot;&gt;4. Is the price right for you?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The crucial question regarding cloud solutions is whether the price is right for you and your organization.
The company financial situation may affect the decisions greatly.
Is the investment in cloud services worth it for your specific needs and circumstances?
If the answer is yes, then by definition, the service is not expensive for you.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When making this decision, it&amp;#8217;s important to weigh numerous factors in comparing on-premises solutions to cloud-based ones.
One key consideration is the nature of the expenditure:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Operating Expense (OPEX):&lt;/strong&gt; When you use cloud services, the costs are typically classified as operating expenses.
This means you pay for the cloud services as you use them, which can be beneficial for cash flow and can often be deducted as expenses in the fiscal year they are incurred.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Capital Expenditure (CAPEX):&lt;/strong&gt; On the other hand, investing in hardware and setting up your own data center involves capital expenditure.
This means a significant upfront investment, which is then depreciated over several years.
CAPEX can have different tax and financial implications compared to OPEX.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Your decision might also be influenced by how you want to manage your company&amp;#8217;s finances.
Are you looking to optimize your expenditures for company valuation or for tax purposes?
The financial situation of your company can greatly impact this decision.
For instance, if preserving cash is crucial, OPEX might be more attractive.
Conversely, if long-term investment and asset building are priorities, CAPEX could be the better route.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Ultimately, the decision between cloud services and on-premises solutions isn&amp;#8217;t just about the technology.
It&amp;#8217;s also deeply rooted in the financial strategy and goals of your organization.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There are several other factors to consider when evaluating cloud solutions:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Flexibility:&lt;/strong&gt; Cloud solutions offer significant flexibility.
With a cloud service, you can dynamically scale your resources up or down based on demand.
In contrast, with an on-premises data center, you have to invest in hardware capable of handling peak loads, which may not always be efficient.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Operational and Personnel Cost Savings:&lt;/strong&gt; Opting for a cloud service can lead to savings in operational and personnel costs associated with running and maintaining a local setup.
These expenses are typically absorbed by the cloud service provider.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Costs vs.
Skills:&lt;/strong&gt; Paying more for a cloud service than what it would cost to set up locally isn&amp;#8217;t necessarily a reflection of your luck or skill.
It does not mean you do it better than the cloud provider.
Your price includes the additional profit margin of the cloud provider.
They probably can also do it cheaper, just do not give it to you at that price.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Resource Sharing:&lt;/strong&gt; Cloud providers utilize virtual machines and containers configured to share resources among multiple clients.
This approach is generally more cost-effective than each client maintaining their own hardware.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Expertise and Shared Costs:&lt;/strong&gt; Cloud providers employ experts to develop, maintain, and operate their software.
The cost of this expertise is distributed across all clients, making it more economical than maintaining an in-house team, even with the option of hiring less expensive developers from regions like Eastern Europe or India.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Shared Facility Costs:&lt;/strong&gt; Costs related to facility location, cooling, and physical security are shared among all clients of the cloud provider, contributing to overall cost-effectiveness.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If the cost of a cloud solution is unaffordable, and a cheaper alternative, still above the cost of the provider is available, both you and the cloud provider lose out.
It&amp;#8217;s a missed business opportunity for the provider, who chooses not to lower prices to capture this segment of the market, thereby maintaining higher profit margins from clients who can afford their services.
This situation can lead to a loss of economic welfare.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;5-can-i-get-it-cheaper&quot;&gt;5. Can I get it cheaper?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It&amp;#8217;s important to remember that the publicly advertised price of cloud services is not always the final price you may pay.
The approach to pricing can differ significantly depending on whether you are an individual or a company.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As an individual seeking to purchase cloud services, you&amp;#8217;re likely to pay the listed price.
While you can request a discount, the response is typically a polite refusal.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;However, the situation changes if you represent a company.
Many professionals, such as consultants, senior experts, or architects, work for organizations where negotiating prices is standard practice.
If you&amp;#8217;re involved in estimating costs for a cloud project within a large company, it would be unwise to base your calculations solely on the advertised prices.
Instead, engage directly with cloud providers.
They are often willing to assist and, depending on the size and stature of your company, might offer substantial discounts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Additionally, cloud providers have the most comprehensive understanding of their pricing structures.
It&amp;#8217;s beneficial to let them assist with the price calculations, as they can provide insights and options that you might not have considered.
This approach not only potentially reduces costs but also ensures that you&amp;#8217;re getting the most value out of your investment in their services.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;6-what-is-the-price&quot;&gt;6. What is the price?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;After exploring how to evaluate pricing, the next step is understanding the actual cost of cloud services, which is not straightforward.
Unlike visiting a grocery store where you can simply look at price tags, the pricing structure of cloud services is composed of multiple components.
Typically, you might encounter initial setup costs, monthly fees, and various usage-based charges.
These usage fees can vary and are often categorized separately for network usage, storage, data transfer between locations, CPU usage, memory, and other resources.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The overwhelming complexity of cloud service pricing can be attributed to two main reasons.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Firstly, there&amp;#8217;s a marketing strategy at play.
Cloud providers aim to present their prices as attractively low while simultaneously maximizing their revenue.
A complex pricing structure, offering various alternatives, often leads customers to choose options that aren&amp;#8217;t the most cost-effective for their needs.
This choice is influenced by a psychological desire for security; customers tend to opt for a pricing plan that offers a perceived safety net, based on their estimation of future resource usage.
However, this estimation is often an overestimation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For example, I personally pay $100 for a GSM mobile plan that includes unlimited calls, SMS, and data, plus 40GB of roaming data, which is shared with my wife on a second device.
In the past five years, I&amp;#8217;ve only exceeded this limit twice.
Offering a range of alternatives is an effective customer engagement tool, as it caters to different needs and perceived usage patterns.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the early 2000s, Hungarian T-Mobile offered thousands of different pricing packages.
Customers couldn&amp;#8217;t choose from all these options at any given time, but once they selected a package, they could keep it indefinitely.
During my tenure there, we conducted a project to assess the marketing value of these packages.
We randomly selected 10,000 anonymized clients and calculated the potential revenue loss if we had offered them the cheapest package that would have met their needs.
The findings indicated that such a change would result in a 30% revenue loss.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Concurrently, we surveyed 1,000 of these 10,000 clients, asking which package they would choose if they had the option to select from all available packages.
Surprisingly, the results showed that the potential revenue gain would be 30%.
This suggests that people often opt for a more expensive package because it offers a sense of security.
This tendency is also observable in the realm of cloud services, where customers frequently select higher-priced options for the perceived safety they offer.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The second reason for the complex pricing of cloud services is, on the other hand, quite rational.
The fundamental value proposition of cloud services lies in optimization.
Cloud providers continuously work on optimizing their infrastructure.
This ongoing process of optimization helps reduce their costs while still delivering the same value to their clients.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Cloud providers, while adept at optimizing their infrastructure, cannot directly optimize your application.
If you manage to reduce your application&amp;#8217;s resource consumption by 10%, they are often willing to offer a discount on a portion of your bill.
You might not receive the full extent of the cost savings they achieve, but it still creates a win-win situation.
Their revenue might decrease slightly, but their profit margin can increase.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the current phase where cloud providers are experiencing growth and attracting more clients, they are generally open to providing discounts if your optimizations help reduce their operational costs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Nowadays, it&amp;#8217;s typically a wise decision to analyze and optimize your cloud usage.
While there might be some exceptional cases where this isn&amp;#8217;t necessary, generally speaking, it&amp;#8217;s a beneficial practice.
Optimizing cloud usage not only can lead to direct cost savings but also ensures more efficient use of resources, which is advantageous both financially and operationally.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;7-summary-and-takeaway&quot;&gt;7. Summary and Takeaway&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The cloud is an undeniable presence in today&amp;#8217;s technology landscape.
It&amp;#8217;s important to consider cloud solutions as an alternative to your on-premises setup.
This decision shouldn&amp;#8217;t be made blindly – as is the case with most decisions.
You need to carefully evaluate the costs and benefits, taking into account your specific situation, negotiating position, potential for optimization, and other relevant factors.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;(This article was republished by &lt;a href=&quot;https://dzone.com/articles/cloud-solutions-are-expensive-or-are-they&quot;&gt;DZONE&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">1. Introduction</summary></entry><entry><title type="html">Programming with AI</title><link href="https://javax0.github.io/2023/08/28/ai-programming.html" rel="alternate" type="text/html" title="Programming with AI" /><published>2023-08-28T00:00:00+02:00</published><updated>2023-08-28T00:00:00+02:00</updated><id>https://javax0.github.io/2023/08/28/ai-programming</id><content type="html" xml:base="https://javax0.github.io/2023/08/28/ai-programming.html">&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;1-introduction&quot;&gt;1. Introduction&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I recently discussed how we use Co-Pilot and ChatGPT for programming with some of my senior colleagues.
We discussed our experiences, how and when it helps, and what to expect from it in the future.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In this article, I will shortly write about what I imagine the future of programming with AI will be.
This is not about what AI will do in programming in the future.
I have no idea about that, and based on my mood, I either look forward amazed or in fear.
This article is more about how we, programmers, will do our work in the future.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;2-the-past&quot;&gt;2. The past&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To predict the future, we have to understand the past.
If you know only the current state, you cannot reliably extrapolate.
Extrapolation needs at least two points and knowledge about the speed of change in the future (maximum and minimum of the derivative function).
So, here we go, looking a bit at the past, focusing on the aspects that I feel are mainly important to predict how we will work in the future with AI in programming.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;2-1-machine-code&quot;&gt;2.1. Machine Code&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When computers were first introduced, we programmed them in machine code.
This sentence should read, &quot;your father/mother programmed them in machine code&quot;, for most of you.
I had the luck to program a Polish clone of the PDP-11 in machine code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To create a program, we used assembly language.
We wrote that on a piece of checkerboard paper(and then we typed it in).
No.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
As I write this article, Co-Pilot is switched on, suggesting the sentences&apos; ends.
In 10% of the cases, I accept the suggestion.
Co-Pilot suggested the part between ( and ) in the last sentence.
It&amp;#8217;s funny that even Co-Pilot cannot imagine a system where we did not have an assembler.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We wrote the assembly on the left side of the paper and the machine code on the right.
We used printed code tables to look up the machine codes, and we had to calculate the addresses.
After that, we entered the code.
This was also a cumbersome process.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There were switches on the front panel of the computer.
There were 11 switches for the address (as far as I remember) and eight switches for the data.
A switch flipped up meant a bit with a value of 1, and a switch flipped down meant a bit with a value of 0.
We set the address and the desired value, and then we had to push a button to write the value into the memory.
The memory consisted of ferrite rings that kept their value even after the power was switched off.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;2-2-assembly&quot;&gt;2.2. Assembly&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It was a relief when we got the assembler.
It was already on a different machine and a different processor.
We looked at the machine code that the assembler generated a few times, but not many times.
The mapping between the assembly and the machine code was strictly one-to-one mapping.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The next step was higher-level languages, like C.
I wrote a lot of C code as a hobby before I started my second professional career as a programmer at 40.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;2-3-close-to-the-metal&quot;&gt;2.3. Close to the Metal&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The mapping from C to machine code is not one-to-one.
There is room for optimization, and different compiler versions may create different code.
Still, the functionality of the generated code is very much guaranteed.
You do not need to look at the machine code to understand what the program does.
I can recall that I only did it a few times.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;One of those times, we found a bug in the Sun C compiler (1987, while I was on a summer program at TU Delft).
It was my mistake the other time, and I had to modify my C code.
The compiler knew better than I did what the C construct I wrote meant.
I do not have a recollection of the specifics.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We do not need to look at the generated code; we write on a high level and debug on a high level.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;2-4-high-level&quot;&gt;2.4. High Level&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As we advance in time, we have Java.
Java uses a two-level compilation.
It compiles the Java code to byte code, which the Java Virtual Machine, JIT technology interprets.
I looked at the generated byte code only once to learn the intricacies of the ternary operator type casting rules, and never the machine code generated.
The first case could be avoided by reading the language spec, but who reads manuals?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The same is true here: we step to higher levels of abstraction and do not need to look at the generated code.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;2-5-dsl-and-generated-code&quot;&gt;2.5. DSL and Generated Code&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Even as we advance towards higher levels, we can have Domain Specific Languages (DSLs).
DSLs are&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;interpreted,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;generate high-level code, or&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;generate byte code and machine code.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The third case is rare because generating low-level code is expensive, requires much work, and is not worth the effort.
Generating high-level code is more common.
As an example, we can take Java::Geci fluent API generator.
It reads a regular expression like the definition of the fluent API, creates a finite state machine from it, and generates the Java code containing all the interfaces and classes that implement the fluent API.
The Java compiler then compiles the generated code, and the JVM interprets the resulting byte code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Should we look at the generated code?
Usually not.
I actually did a lot because I wrote the generator, and so I had to debug it, but that is an exception.
The generated code should perform as the definition says.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;3-the-present-and-the-future&quot;&gt;3. The Present and the Future&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The next step is AI languages.
This is where we are now, and it starts now.
We use AI to write code based on some natural language description.
The code is generated, and we have to look at it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This is different from any earlier steps in the evolution of programming languages.
The reason is that the language AI interprets is not definite the same way as Java, C, or any DSL.
It can be ambiguous.
It is a human language, usually English.
Or something resembling English when non-native speakers like me write it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;3-1-syntax-free&quot;&gt;3.1. Syntax-free&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This is the advantage of AI programming.
I do not need to remember the actual syntax.
I can program in a language I rarely use and forget the exact syntax.
I vaguely remember it, but it is not in my muscle memory.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;3-2-library-free&quot;&gt;3.2. Library-free&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It can also help me with my usual programming tasks.
Something that was written by other people many times before.
It has it in its memory, and it can help me.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The conventional programming languages have it, but with a limited scope.
There are language constructs for the usual data structures and algorithms.
There are libraries for the usual tasks.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The problem is that you have to remember the one to use it.
Sometimes, writing a few lines is easier than finding the library and the function that does it.
It is the same philosophy as the Unix command line versus VMS.
(You may not know VMS. It was the OS of the VAX VMS and Alpha machines from DEC.)
If you needed to do something in VMS, there was a command for it.
In Unix, you had simpler commands, but you could combine them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;With AI programming, you can write down what you want using natural language, and the AI will find the code fragments in its memory that fit the best and adapt it.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;3-3-ai-language&quot;&gt;3.3. AI Language&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Today, AI is generating and helping to write the code.
In the future, we will tell the AI what to do, and it will execute it for us.
We may not need to care about the data structure it stores the data or algorithms it applies to manage those.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Today, we think of databases when we talk about structured data.
That is because databases are the tools to support the limited functionality a computer can manage.
Before the computers, we just told the accountant to calculate the last year, whatever profit, balance sheet, whatnot, and they did.
The data was on paper, and the managers did not care how they were organized.
It was expensive because accountants are expensive.
The intelligence they applied, extracting data from the different paper-based documents, was their strong point; calculation was just a mechanical task.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Computers came, and they were strong doing the calculations.
They were weak in extracting data from the documents.
The solution was to organize the data into databases.
It needed more processing on the input, but it was still cheaper than having accountants do the calculations.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;With AI, computers can do calculations and extract data from documents.
If it can be done cheaply, there is no reason any more to keep the data in a structured way.
It can get structured when we need them for a calculation on the fly.
The advantage is that we can do any calculation, and we may not face the issue that the data structure is unsuitable for the calculation we need.
We just tell the AI program using natural language.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Is there a new patient coming to the practice?
Just tell the program all the data, and it will remember like an assistant with unlimited memory who never forgets.
Do you want to know when a patient last visited?
Just ask the program.
You do not need to care how the artificial simulated neurons store the information.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It certainly will use more computing power and energy than a well-tuned database, but on the other hand, it will have higher flexibility, and the development cost will be significantly lower.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This is when we will talk to the computers, which will help us universally.
I am not shy about predicting this future because it will come when I will not be around anymore.
But what should we expect in the near future?&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;3-4-the-near-future&quot;&gt;3.4. The near future&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now, AI tools are interactive.
We write some comments or code, and the AI generates the code for us, which is the story&amp;#8217;s end.
From that point on, our &quot;source code&quot; is the generated code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can feel from the previous sentence the contradiction.
It is like if we would write the code in Java once, then compile it into byte code, and then use the byte code to maintain it.
We do not do that.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Source code is what we write.
Generated code is never source code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I expect meta-programming tools for various existing languages to extend them.
You insert some meta-code (presumably into comments) into your application, and the tool will generate the code for you.
However, the generated code is generated and not the source.
You do not touch it.
If you need to maintain the application, modify the comment, and the tool will generate the code again.
It will be similar to what Java::Geci is doing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You insert some comments into your code, and the code generator inserts the generated code into the editor-fold block following the comment.
Java::Geci currently does not have an AI-based code generator, or at least I do not know about any.
It is an open-source framework for code generators; anyone could write a code generator utilizing AI tools.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Later languages will include the possibility from the start.
These languages will be some kind of hybrid solution.
There will be some code described by human language, probably describing business logic, and some technical parts more like a conventional programming language.
It is similar to how we apply DSL today, with the difference that the DSL will be AI-processed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As time goes forward, the AI part will grow, and the conventional programming part will shrink to the point when it will disappear from the application code.
However, it will remain in the frameworks and AI tools, just like today&amp;#8217;s machine code and assembly.
Nobody codes in assembly anymore, but wait?
There are still people who do.
Those who write the code generators.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;And those who will still maintain 200 years from now in the future the IBM mainframe assembly and COBOL programs.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;4-conclusion-and-takeaway&quot;&gt;4. Conclusion and Takeaway&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I usually write a conclusion and a takeaway at the end of the article.
So I do it now.
That is all, folks.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">1. Introduction</summary></entry><entry><title type="html">Virtual and Augmented Reality is Here</title><link href="https://javax0.github.io/2023/08/27/vr-future.html" rel="alternate" type="text/html" title="Virtual and Augmented Reality is Here" /><published>2023-08-27T00:00:00+02:00</published><updated>2023-08-27T00:00:00+02:00</updated><id>https://javax0.github.io/2023/08/27/vr-future</id><content type="html" xml:base="https://javax0.github.io/2023/08/27/vr-future.html">&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;1-introduction&quot;&gt;1. Introduction&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Virtual reality is a technology when you wear some device projecting a non-existent world into your senses.
This way, you partially or completely lose the connection to the real world and are immersed in the virtual world.
Current technology does not allow a complete loss of connection to the real world, and the senses are mainly limited to vision and hearing.
Usually, two LCD devices with special optics are mounted on your head, and different sensors track your head movement.
The computers display pictures on the LCDs that change as you move your head, showing a static or dynamic virtual reality around you.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In this article, I will write about the history of virtual reality and how I got my fingers wet.
I will also write about what I experienced recently with my newly bought Meta Quest Pro and how I see the future of virtual reality.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;2-history&quot;&gt;2. History&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The first virtual reality device was the first loudspeaker headset limited to audio senses, but the term was not used for that.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The first virtual reality device, called virtual reality, was the Sensorama, built by Morton Heilig in 1962.
I had a set on my head in 1995 at an exhibition IFABO in Budapest.
I worked for Digital Equipment Corporation then, and we had a stand there.
My task was to show the visitors the virtual reality headset that DEC created in cooperation with Kubota.
If you Google the term &lt;em&gt;&quot;Kubota Denali VR&quot;&lt;/em&gt; you may find interesting traces of history.
I had little time to try and play with it, but I was impressed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I was convinced that VR is the future and will be here as soon as 2000 in five years.
I remember this because I was young and &quot;brave&quot; enough to express this prediction publicly.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;2-1-derail-prediction-and-braveness&quot;&gt;2.1. Derail: Prediction and Braveness&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When you are an expert, you can predict the future with a certain precision.
You are a visionary if you tell others how you see the future and are correct.
If you are wrong, then you are a fool.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When you are young and at an early stage of your Dunnig-Kruger curve, you are brave enough to express your predictions.
So, I was brave enough to say that VR will be here in five years.
I stated it in a forum not smaller than the main central state-running radio stating Kossuth Radio in Hungary.
Nobody remembered it after five years, so it was not a big shame, but in 2015, twenty years later, the same guy invited me again to the radio to review my predictions.
It was interesting.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I had some good predictions, like saying that mobile phones will be ubiquitous and be a personal computing device connected to the internet.
But my VR prediction was off the rails.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Why is it important to mention this other than it gives you credibility when you admit your past mistakes in an article?
Now I see what I did not see then and why VR did not sweep the board.
In this article, I will repeat the mistake I made almost thirty years ago and predict VR&amp;#8217;s future again.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Why am I so &lt;em&gt;&quot;brave&quot;&lt;/em&gt; to do that?
Because I am old enough to be brave again.
Young people are brave enough to predict the future because they do not understand that their predictions may bite back.
Old people know that when the prediction bites back, they will not be there to be bitten.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sidebarblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Never trust the prediction of a young or an old expert.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;3-current-experiences&quot;&gt;3. Current Experiences&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I bought my first VR headset in 2017.
It was a Sony Playstation VR.
It was a birthday present from me.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;At that time, I saw the state of VR as mainly a plaything.
Gaming and entertainment.
I had some play with Fruit Ninja and Beat Saber.
I tried some other games but got dizzy very soon, and I realized why I was wrong in 1995.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The technology for the VR headset was not good enough.
It lacked resolution, was too expensive, and needed improvement in tracking the head movement and lag of screen refresh.
Lag is very important.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When, for example, you tilt your head and the world you see tilts with your head for a moment and then gets back to its state to make the horizon horizontal again, you get dizzy.
The lag is the time between your head&amp;#8217;s movement and the picture on the screen.
The lag does not need to be large enough to be consciously recognizable, and it may still make you dizzy.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When the virtual world is dynamic, like car racing, your balance organ, the vestibular system, gets confused.
You see the car and the world around you running, but you are stationary.
That is what makes you really vomit.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Parts of these problems can be solved, others not.
In 1995, even in a static environment, I got easily dizzy.
Today, it is much better, and (jumping a bit ahead) I can spend hours working in VR, watching virtual screens in a virtual café.
As a matter of fact, I write this article with a Meta Quest Pro on my head, and I am sitting in a virtual café in Immersed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I knew this was not my last VR set, and I will have a next one suitable for work.
I was following the news about the vast investments of Meta and Facebook into VR.
However, I was waiting for Apple to come up with the next generation of VR.
I use a lot of Apple products.
They have superb usability and a hefty price tag.
On the other hand, if a senior engineer living in Switzerland who has paid off (never had) all the mortgages raised cannot afford the overpriced products, then who can?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When the Apple Vision Pro was introduced with the price tag of 3.5k USD, I realized I would not wait for Apple.
I could, but I do not want to pay that amount for something 1.0 and experimental.
I could also read between the marketing videos&apos; lines to know that this headset may be better than the competition, but it is still experimental.
It is not Apple&amp;#8217;s fault.
Although I expected a working version, I can see that this expectation was unrealistic.
It is not Apple Vision Pro that is experimental; it is the whole VR field, even after 30 years.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The reason, as I see now after experimenting with the Meta Quest Pro, is not technology.
Technology has developed enough during the last three decades so that companies can produce VR with good enough LCD, tracking, and optics.
It is the software that is immature, and it is in a unique way.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When you think about immature software, you usually think of software that has bugs.
Although the Meta Quest Pro certainly has bugs, that is not why I say it is immature.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Currently, there is no best practice on how we can and will use VR for work.
To develop that knowledge will need much work.
It includes those early experimenters willing to invest their time and effort in working with this immature technology.
It also needs a lot of money from companies like Facebook to develop the software.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Many software developed today will be thrown away in a few years.
Not because they are buggy or low quality but because they implement unusable use-case scenarios.
Nobody knows what is usable.
Do we want to navigate in a three-dimensional space with boxes and spheres representing different files?
Should we represent directories as boxes and zoom into them to see the files, or will they be lined up behind them?
Should we imitate the kinematics of natural objects in a gravitational field like in our everyday earthly environment?
Should we float in space without specific directions when we move between some abstract objects representing files, folders, programming elements, and relationships between these objects?
We will try; some people will like the first, some will be best fitting with the second, and others will prefer something developed we cannot even imagine today.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When I ordered my Meta Quest Pro, I was unsure what I would use it for.
I did not expect it to be ready for work.
I was hoping, but I realized that it may not be.
I imagined different use cases.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Work in a virtual environment with virtual screens, using Immersed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Play games.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Play some games, which are a workout.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;4-meta-quest-pro-first-steps&quot;&gt;4. Meta Quest Pro First Steps&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I had mixed feelings when I got the Meta Quest Pro.
First of all, I had to wait a month till it arrived.
While waiting, I watched many YouTube videos about the device and the programs, so I was hiked.
Clearly, it was a mistake.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;After I started, it froze, and I had to restart it.
But it did not happen ever again.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I had to install an app on my iPad/iPhone to use the headset.
It is okay, but I had to Google it because the QR code on the printed users&apos; manual led to a 404 page.
I deserve a seamless start for a 1000$.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It does not have a good tutorial.
It has a tutorial, but it is like someone had to write one to tick it off from the to-do list rather than one written for the user.
The usability and the guidance of Apple products spoiled me.
For example, there is a mirror in the virtual environment, which shows your avatar.
I did not get any information from the tutorial or documentation that it has a use.
I saw my avatar&amp;#8217;s reflection, but nobody told me that I could customize my avatar if I clicked there with the virtual laser beam.
Later, I also found the menu system to set up the avatar.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;After five hours of use, I still could not figure out the different uses of the buttons.
After a few weeks, I know why: there is no convention.
Different applications use the different buttons differently.
There are X  and Y and A  and B buttons, but they have no unified meaning or use.
The only more or less fixed convention is that the shooting button for your index finger is shooting, and the trigger button for your thumb is grabbing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I had some early bad experiences with the power and speaker loudness buttons.
As I was moving the headset on and off a few times, I accidentally pressed these buttons.
I had to learn muscle memory to grab the headset, a different way from what I first felt natural.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The hand-tracking feature is amazing but not usable.
It is amazing because it works, but I had to switch it off when working in a virtual environment.
When I type, the controllers are not in my hand.
The headset recognizes this, and all my typing movements it tries to interpret as hand gestures.
Bizarre results.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The screen resolution for the virtual screens is usable, but they cannot compete with my two displays, 5k each setup.
I can see the pixels and the difference between the virtual and the actual screens.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The keyboard use is also a pain point.
There are two ways to use the keyboard.
One is a so-called portal.
It is a shape fixed in the virtual space that shows the real world behind the shape.
It is like a window to the real world from the virtual world.
You can open a portal for the keyboard and see your keyboard blurry.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The problem probably comes from the fact that the cameras were designed for tracking, not showing the real world.
I can see my keyboard but must adjust the light, and the picture waves slightly.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The other possibility is to use a so-called tracked keyboard.
In this case, the software identifies the keyboard by its shape and draws a virtual keyboard where the actual keyboard is.
At the same time, it draws your hands in real-time, so you see your hands and keys in a virtual environment.
It works as a labor experiment.
Only a few keyboards are supported: some Logitech models, Apple Magic keyboards, and Macbook Pro and Air keyboards.
Luckily, I have a magic keyboard, but I use a Windows native Hungarian keyboard layout.
Virtual keyboards support only US layout.
Not even Y and Z swapped for many European keyboards.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You must have a high-speed connection between the PC/MacBook and the headset to use virtual displays.
To have that, I configured my MacBook to use my iPhone interned via a tethered connection.
The Wi-Fi uses the 5GHz band and provides a dedicated hotspot for the headset.
With this setup, the lag between the computer and the headset is 6m; that should be enough.
Because I still could feel a little lag in the mouse movement, I ordered a USB-C to USB-C Oculus cable.
I feel ashamed to admit how much I paid for it, but it moved the latency to 2ms.
The mouse is still lagging.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I also had to switch to dark mode with IntelliJ for better visibility on the virtual screens.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Watching movies is impressive.
And I did not mean the &lt;a href=&quot;https://www.youtube.com/watch?v=h8srG_iKh5Y&quot;&gt;special movies&lt;/a&gt;.
Just a good old boring Netflix, Disney, Amazon, etc. movies.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;5-apps-i-used&quot;&gt;5. Apps I Used&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I tried a few applications, and other than a few games I already used before, I categorize each application as experimental.
The most mature application is Immersed.
There are a lot of problems with it, but I use it every day for a few hours.
It proves it is usable, but to be honest, I am not absolutely sure if I use it because&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;I really like it despite the drawbacks or&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I have buyer&amp;#8217;s remorse and must convince myself that I did not waste my money.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;What I have experienced, though, is that meeting people in a virtual environment is much more natural than I expected.
When I do a video conference, I see the faces of the people I talk to.
When I do a virtual meeting, I can only see the avatars.
I expected it to be less natural, but somehow, it felt more in the present.
You are visually in the same space as the other people&amp;#8217;s avatars; you talk to them, and your hands are tracked and shown, as well as your facial expression.
I also experienced that we needed less &quot;who talks when&quot; protocol than in a video conference.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I also tried a mind-mapping application called Noda.
I do not use mind mapping often, but I wanted to see how it works.
I was surprised.
Using spatial representation of the mind map is much more natural than the flat one.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I also tried some 3D drawing, and I am still behind my plans with CAD for 3D printing.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;6-future-apps&quot;&gt;6. Future Apps&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;And this is the chapter where I will make a fool of myself.
Let&amp;#8217;s hope that I live long enough to see it.
I will not give exact year numbers when something will come.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There will be a lot of technical development in the next few years, but that is something out of my experience.
I expect many steps forward regarding the software, applications, and development.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Right now, we have different applications that present virtual worlds and something in it.
Immersed does two things: 1. provides a space where people and their avatars are visible and can interact, and 2. provides virtual screens.
Noda, the mind mapping application, also provides 1. a virtual space and 2. a virtual mind map.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It is somehow analogous to the MS-DOS times when you could run only one application on the screen simultaneously.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I expect the virtual space to become the desktop.
It has to be provided by the operating system, and the different applications will be able to use it, placing and moving different virtual objects in it.
I have not read articles that envision this model, but I am sure this is how VR architects at big companies envision the future.
What do we miss there?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We miss the copy/paste and the drag-and-drop functionality.
I do not mean literally.
I do not think we should have a virtual clipboard and drag-and-drop virtual objects.
But we need a way to use different applications in the same virtual space and make them interact.
What we miss is the act, which is the most natural way of interaction between applications like drag and drop and copy/paste on the desktop.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;With that, I am sure we will soon forget the desktop and the windows and virtual windows.
Tethering a MacBook to a headset is like tethering a horse to a railway car.
It was needed briefly to provide the continuity of cultural development, but we will forget it.
We will have a VR version of programming IDEs; we will have 3D CAD, mind mapping, 3D UML diagrams, ORM representation, and so on.
These will run on the headset, and we will not need to embed the 2D desktop into our 3D virtual world.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;7-conclusion&quot;&gt;7. Conclusion&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This article is not about software development, but since most of my articles are about that, I expect that most of my readers are.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;What should you do as a developer?
What is the message?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;First of all, you must not ignore VR technology anymore.
The headsets become better and cheaper, and the software will develop.
Immerse, for one, can be a good excuse to buy a headset if you need an excuse.
You should get acquainted with the technology, what is available, and what can be developed.
Expect new operating system features supporting VR and new APIs and tools.
There will be many opportunities in the coming years around this technology.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">1. Introduction</summary></entry><entry><title type="html">Unit test future versions</title><link href="https://javax0.github.io/2023/08/25/unit-test-the-future.html" rel="alternate" type="text/html" title="Unit test future versions" /><published>2023-08-25T00:00:00+02:00</published><updated>2023-08-25T00:00:00+02:00</updated><id>https://javax0.github.io/2023/08/25/unit-test-the-future</id><content type="html" xml:base="https://javax0.github.io/2023/08/25/unit-test-the-future.html">&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;1-introduction&quot;&gt;1. Introduction&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Recently I modified a feature in Jamal.
I kept the original functionality for backward compatibility, but I added a new feature.
However, the use of the old feature is deprecated, and it will be removed in the next version.
I also wrote in the document that version 3.0.0, which is somewhere in the future, will not support the old feature.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;How can I ensure that the feature gets deleted in that release?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In this article, I describe what I did.
It may not be the best solution.
You may come up with better ideas, and you are very much welcome to do that in the comment section.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the following chapters, I will dig a bit into what I changed, to give some background and then the tests I created.
In the end, I will also tell you what I do not like in this solution.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;During this way I will also reiterate the most important features of unit tests, which surely is discussed in many other places, but it does not hurt to repeat.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;2-the-feature&quot;&gt;2. The feature&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Jamal uses macros.
After all, Jamal is a meta markup language with built-in and user defined macros, so that is a core feature.
The macros are identified by a name, that contains &lt;code&gt;[$_:a-zA-Z0-9]&lt;/code&gt; characters not starting with a number.
This is fairly standard.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Some solutions import text from some source where the natural name of the source does not comform to this rule.
To overcome this, there is a macro named &lt;code&gt;macro&lt;/code&gt; that returns a temporary alias for the macro named irregularly.
That way, instead of the syntactically incorrect&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;{this.cannot.be.a.macro}&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;can be used as&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;{{@macro [alias]this.cannot.be.a.macro}}&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The macro &lt;code&gt;macro&lt;/code&gt; can create aliases for user defined as well as for built-in macros.
To get an alias for a built-in macro the option &lt;code&gt;builtin&lt;/code&gt; has to be used.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;{@{@macro [builtin alias]this.cannot.be.a.macro}}&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The old version used a different format&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;{@{@macro [type=&quot;builtin&quot; alias]this.cannot.be.a.macro}}&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;defining the type of the macro as a string.
As Jamal was developed the parameter options can now be Java &lt;code&gt;enum&lt;/code&gt; values.
When you can select &lt;code&gt;builtin&lt;/code&gt; or &lt;code&gt;userdefined&lt;/code&gt; this is a better choice than using a string.
The part &lt;code&gt;type=&lt;/code&gt; is only noise with no extra information.
It is evident what &lt;code&gt;builtin&lt;/code&gt; or the default &lt;code&gt;userdefined&lt;/code&gt; means.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The parameter option &lt;code&gt;type&lt;/code&gt; will be deprecated in the next release (2.5.0), but should not be deleted.
It will be removed in the release 3.0.0.
Backward incompatibility has to be kept to minimal and is usually not allowed for minor version increase.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;3-problem-statement&quot;&gt;3. Problem Statement&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I wrote in the documentation:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sidebarblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
The parop &lt;code&gt;type&lt;/code&gt; with string parameters is supported for compatibility reasons only and is deprecated.
It will be removed in release 3.0.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;How can I ensure that the feature gets deleted in that release?
When we need something to be ensured, the best way is that we write a test about it.
The tests run automatically for each build, and if the test fails, the build fails.
It is more or less a trivial idea to have a test for the feature.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;4-designing-the-test&quot;&gt;4. Designing the Test&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The functionality of the test is fairly simple.
It has to check the version of the Jamal library and if it &lt;code&gt;3.0.0&lt;/code&gt; or higher than it has to check that the &lt;code&gt;type&lt;/code&gt; parameter is not supported.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To do that it is simple: we have to process a &lt;code&gt;macro&lt;/code&gt; with the &lt;code&gt;type&lt;/code&gt; parop, and it has to throw an exception.
Since Jama has a support library, you can easily write:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;TestThat.theInput(
  &quot;{@define a=yayy}{#ident {@define a=value of a}&quot; +
  &quot;{@macro [global type=\&quot;user defined\&quot;]a}}&quot;).throwsBadSyntax();&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Jamal can also provide the running instance version calling &lt;code&gt;Processor.jamalVersionString()&lt;/code&gt;, therefore, it is also not an issue.
The whole test is&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;@Test
@DisplayName(&quot;Macro parop &apos;type&apos; is deprecated and has to be removed in version 3 and later&quot;)
void testDeprecation() throws Exception {
    final var v = Processor.jamalVersionString();
    if (!v.startsWith(&quot;2&quot;)) {
          TestThat.theInput(
            &quot;{@define a=yayy}{#ident {@define a=value of a}&quot; +
            &quot;{@macro [global type=\&quot;user defined\&quot;]a}}&quot;).throwsBadSyntax();
    }
}&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;That is the technical part, but I also want this unit test to be a &quot;real&quot; unit test.
Is it possible?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Unit tests have to be
&lt;em&gt;descriptive, fast, isolated, repeatable, small, self-validating,
maintainable, trustable, focused, thorough&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;to name a few of the qualities.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;Descriptive&lt;/em&gt; means that reading the code of the unit test makes it evident what the test does.
Many times this feature is mentioned as &lt;em&gt;readable&lt;/em&gt;.
In the case of JUnit it is supported by the &lt;code&gt;DisplayName&lt;/code&gt; annotation.
Looking at the unit test above this is hardly a problem.
We can tick this check box.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;Fast&lt;/em&gt; means that the unit test should bot take too much time.
This should also not be a problem.
The macro processing does not use any io, it is as fast as it can be.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;Isolated&lt;/em&gt; means that the test runs fine even if there is some bug in some part of the code the test is not responsible for.
If this test is isolated or not is debatable.
It is not isolated as it uses the test support library of Jamal, which indeed uses the processor.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;One can argue that when this test runs, the processor is not under test and has to be considered as trusted code the same way as the mock library is trusted.
This is very much true when we test a macro library, which is independent of the core Jamal is tested.
A bit less when we run macros that are part of the Jamal library.
In this case, there can also be bugs in the processor affecting this test.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It is a rare case, and the simplicity provided by avoiding the mock setup balances the cost of the possible bug in the processor.
It is how Jamal is designed and how it supports macro unit testing.
Also, this is a general engineering compromise between isolation and simplicity and has nothing to do with the fact that the problem is to test a future version.
Let&amp;#8217;s discuss this further sometimes in the future in a different article.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;Repeatable&lt;/em&gt; means that the test should run the same way no matter how we execute it.
It is isolated from the environment.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;Small&lt;/em&gt; means that the unit test is short. It is very much related to the &lt;em&gt;descriptive&lt;/em&gt; and &lt;em&gt;maintainable&lt;/em&gt; quality.
If a unit test is large, contains many lines, it is hardly readable and usually not easy to maintain.
In that case, it is also a code smell that there is something wrong.
Either the unit test is wrong in some sense or the code itself needing some refactoring to be testable.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In this case, the unit test is small.
It is three lines of code, or five adjusted to printing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;Self-validating&lt;/em&gt; means that there is no need to check the output of the test manually.
There can be no debate if the test passed or failed.
The output of the test is either green or red.
If it is red, then it can still be failed test or an error, which is also a kind of failure needing attending.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;Maintainable&lt;/em&gt; means that whenever the code changes and the code in the unit test becomes invalid, it is easy to change.
Let&amp;#8217;s assume no matter how absurd it is that the syntax of the macro &lt;code&gt;define&lt;/code&gt; changes.
This macro is used in the unit test.
If the change is so, then the unit test will fail, but not related to the tested feature.
It also shows that this unit test is not properly isolated, but I already discussed that and I will in detail in a further article.
The test, however, is maintainable because it is extremely easy to follow the imagined change in the syntax.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Of course, the syntax of such a centerpiece macro like &lt;code&gt;define&lt;/code&gt; will not change backward incompatible.
That would be bad product management, but let&amp;#8217;s not derail: it was only a hypothetical example.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;Trustable&lt;/em&gt; means that the test either passes or fails all the time independent of external conditions.
It does not matter if it is a hot summer, or cold winter, it is sunny or rainy, the operating system patched to the latest security patch, replaced by the marketing department from Linux to Windows: the test will pass or fail.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There are cases when tests sometimes pass, and sometimes fail.
There is a popular extension of the JUnit framework in the JUnit Pioneer project that allows you to run the same test multiple times till it does not fail.
This is a totally wrong approach, and instead of being okay with having a test, sometimes passing, the developer should thrive for trustable test.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Do not take it wrong.
A test that sometimes fails and sometimes passes can prove that the code is ok.
It depends on the code, the feature tested and the test itself.
For example, you can have a method that returns prime number to the number of seconds in current time modulo ten.
A test can check that the method returns 5 and repeats every half second till it gets it.
It is highly questionable what it proves when it passes, but failure does not mean that the code is wrong.
The test has to be improved, but if it cannot, then it may be better to have it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This test, I believe, is trustable.
Can you prove that it is trustable?
Questionable.
I will discuss this issue in this article.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;Focused&lt;/em&gt; means that the test checks one feature.
If the test fails, it proves that one feature is faulty.
Beginners many times put multiple features in one test.
This makes it more difficult to see what feature is faulty when a test fails.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Being focused is also expressed many times saying that one test should have one assertion only.
This is misinterpreted many times as one test should have one line of assertion code only.
This is not the meaning of the &quot;one assertion&quot; rule.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can check in an assertion statement the length of a list, then in the next assertions the individual elements.
Technically, these are several assertion statements, but they compose one complex assertions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The above test is focused.
Do not mistake the two conditions.
One is not an assertion, rather a prerequisite of the test.
Other than that the test checks if the feature &lt;code&gt;type&lt;/code&gt; is deprecated and removed in the future version.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;Thorough&lt;/em&gt; means that the set of unit tests cover all relevant cases.
A single unit test cannot prove that the code functions as expected.
It can only prove that the code does not function as expected.
On the other hand, the full set of unit tests gives a fairly good approach and approximation of the correctness of the code.
It does not prove strictly to speak.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Looking at this single unit test as a set, I can say that it covers all relevant cases.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;5-trustability&quot;&gt;5. Trustability&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As we said, the trustability of the example test is questionable.
So here we question and answer that.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Turstability is a tricky feature of tests.
If you are a QA person, you know that nothing is tursted unless it is tested.
Testing the test is a great idea, after all that is your bread and butter, that is what you earn your money.
Unfortunately, or not so &quot;un&quot; fortunately that is also a cost of testing.
Testing the test is recursive and something having a cost attached to it must not run away.
Therefore, we usually stop there and do not test the tests with other tests.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;What developers do&amp;#8230;&amp;#8203;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I do not know what developers do.
I know what I do.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When I create a test for a feature, I run the test before developing the feature.
Then I develop the feature and then the test passes.
This is some basic form of TDD, and I am not always that disciplined.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If some strange way the feature is already there when I develop the test, then I just remove the feature to see that the test fails.
This is a manual test of the test.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;How can we do that in our case?
We have a test that checks that the &lt;code&gt;type&lt;/code&gt; parameter is removed and a precondition.
The issue is that the precondition needs a future release, which is not there yet.
It will be there as soon as the release will be created or when time travel is invented, whichever comes first.
,n of the Jamal library to a future version and run the test.
And that is exactly what I did.
And it failed as it should.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hurray&amp;#8230;&amp;#8203;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;6-takeaway&quot;&gt;6. Takeaway&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We discussed a simple problem and a simple technique to solve it.
It would not deserve much conclusion.
A simple trick.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;However, if I look at it as an example of some out-of-the-box thinking, we can learn from it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Unit test is a tool.
There are some rules on how to use it, but these rules are not strict.
They are not the ten commandments.
They are there to help us and must not be followed dogmatically.
We should understand why a unit test has to be descriptive, fast, isolated, repeatable, small, and so on.
If we understand the reasons we can judge better if our tests conform to the rule and also when to make an exception, when is it acceptable to break some of the rules.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">1. Introduction</summary></entry><entry><title type="html">Do not stop threads</title><link href="https://javax0.github.io/2023/08/07/do-not-stop-thread.html" rel="alternate" type="text/html" title="Do not stop threads" /><published>2023-08-07T00:00:00+02:00</published><updated>2023-08-07T00:00:00+02:00</updated><id>https://javax0.github.io/2023/08/07/do-not-stop-thread</id><content type="html" xml:base="https://javax0.github.io/2023/08/07/do-not-stop-thread.html">&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;I dedicate this article to László Fekete, my former boss and director at T-Mobile Hungary.
He plays a significant role in this story as he was the one who made the decision to cancel our contract.
I must acknowledge that he made the right call, and it was the correct course of action.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;However, I also remember some instances where he seemed less concerned about his health, disregarding his blood pressure and cholesterol levels, despite my concerns, which we discussed a few times.
Sadly, László passed away in 2017 at the young age of 57 due to a heart attack.
It&amp;#8217;s a stark reminder of the importance of taking care of our well-being and not neglecting warning signs.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;Now, as I find myself at the same age László was when he left us, it serves as a poignant reminder of the fragility of life and the need to prioritize our health and well-being.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;1-introduction-topic&quot;&gt;1. Introduction, Topic&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I am 57, and I recently made some bad moves, and my back aches.
I cannot sit for a long time, and I suddenly had ample time at my hand watching YouTube videos.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;During my exploration, I stumbled upon an impressive channel called &lt;a href=&quot;https://www.youtube.com/@ThePrimeTimeagen&quot; class=&quot;bare&quot;&gt;https://www.youtube.com/@ThePrimeTimeagen&lt;/a&gt;.
The creator of this channel is a remarkable young individual who possesses wisdom beyond his years.
His videos exhibit a profound understanding of technology, which captivates me.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I appreciate how he simply sits and discusses other videos or articles without feeling the need to over-explain things.
It&amp;#8217;s a &quot;take it or leave it&quot; approach.
Those who comprehend his content gain valuable insights, and those who don&amp;#8217;t: sorry.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I very much enjoy when I understand what he says and feel that probably not many do.
It is a snug but somewhat arrogant feeling that one should be careful.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Also, I could hardly find any of his statements I would strongly disagree.
Sometimes I feel we could have some discussion, but generally I can agree to, or accept his points.
Go and watch him!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Recently I saw a video where he was commenting an article that was about a story how someone almost accidentally corrupted PayPal in the early days.
I will not talk about that, it is here &lt;a href=&quot;https://www.youtube.com/watch?v=MzescXc5SW0&quot; class=&quot;bare&quot;&gt;https://www.youtube.com/watch?v=MzescXc5SW0&lt;/a&gt;.
It is a story with lots of technical details you can learn from.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Being 57 does not only mean backache.
It also means that I have seen and done a few things that sometimes I tell younger people in the office.
Why not write articles about these?
So I decided I will write a few articles about things that I have seen and done and that I think are worth sharing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;And here we go.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;2-disclaimer&quot;&gt;2. Disclaimer&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Most of the story is true and based on real events.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;3-stopping-threads&quot;&gt;3. Stopping threads&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As I said, I have time to watch YouTube videos.
I came across the video &lt;a href=&quot;https://www.youtube.com/shorts/f4fajEBqY0g&quot; class=&quot;bare&quot;&gt;https://www.youtube.com/shorts/f4fajEBqY0g&lt;/a&gt;.
It is a short video about how to stop a thread, which you should not.
This is one minute, and it does say you should not, and a sentence why, but one minute is too limited to explain the reasons.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I know why you should not stop a thread and not only what the documentation says.
It cost me 20,000$ in lost revenue in 2006 when the GDP per capita per year in my country was less than that.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;4-background&quot;&gt;4. Background&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I started programming in 1980.
My father was a professor at TU Budapest in Hungary and could access a &lt;a href=&quot;https://en.wikipedia.org/wiki/TI-30&quot;&gt;TI-30&lt;/a&gt; calculator.
It was a programmable calculator.
I remember I tried to write a program to crack an RSA encoded text published to be cracked.
Although the prime numbers were only 10 digits long, and the calculator had 1024-step program memory, registers were perhaps 16bit integers, and I had to implement multi precision arithmetic in my code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I never succeeded with this one, but the exposure to programming &quot;infected&quot; me.
I was 14.
Later I programmed the Swedish ABC80, the Hungarian C64 clone, and the Hungarian VT-1080z that resembled the &lt;a href=&quot;https://en.wikipedia.org/wiki/Enterprise_(computer)&quot;&gt;Enterprise&lt;/a&gt; computer, ZX Sinclair Spectrum, and many others.
That time we programmed whatever we could get our hands on.
My Unix exposure was minimal because the chair I was volunteering had VAX VMS machines.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I finished TU Budapest Electric Engineer and started to work as a sales rep for Digital Equipment Corporation in Hungary in 1991.
Does not fit a programming carrier, does it.
That the time paid programming in Hungary was mainly crafting bookkeeping applications in BDase, and it did not pay well.
I was already married and had a child with the twins on the way, so I needed a respectable wage.
You can afford to live your hobby as a profession if you can afford it.
My priorities were different.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I kept programming in C and Perl that time as a hobby.
I even wrote a small book in Hungarian about perl, which was the first such, and many learned Perl programming that time from my book.
So much that when &lt;a href=&quot;https://en.wikipedia.org/wiki/Larry_Wall&quot;&gt;Larry Wall&lt;/a&gt; visited the Budapest Perl conference in the late 90s, I was invited as a keynote speaker.
The title of my talk was &quot;Forbid Perl&quot;, and I was talking about how Perl makes you so productive that using Perl eliminates the need of too many other programmers, and therefore it has to be forbidden to be used for real applications.
I was saying that in front of the father of Perl sitting in the first row.
I intended that as humor, but after a few decades I see that I was right.
At the time, I did not see the benefit of professional software development overhead versus hacking something together in Perl.
It is not the trait of the language per se, but Perl usually was used to script things in a hacky way.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I left DEC in 1999 and joined index.hu as CIO.
It was a small startup, the first only online news site founded by a few university friends of mine.
We wanted to make history and get rich.
We achieved the first one.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I also programmed the advertisement engine of the site, which is a story on its own.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When the dotcom bubble burst, we had to lay off people, restructure the operation from investment oriented growing to sustainable operation.
There were a lot of things I learned there, but those were management lessons, not programming.
The last step was to give in my own notice, and I left the company in 2001.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Then I started to work for T-Mobile, but they did not hire me as a programmer.
I had no prior professional experience and &quot;hobby programming&quot; did not count.
I was hired as a project manager.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I was working in that position, I even ignited the development of a reformed project management methodology, but this was not my piece of cake.
Five years later, my brother told me to create our own company.
He was one sixth owner of a small company that was doing software development, and the other five developers moved towards SQL and stored-procedure direction.
My brother thought that Java development is more interesting and more prospective, so he wanted to start a new company.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Why we decided to go to the Java direction and not Microsoft is again another topic that deserves an article on its own.
It was more political/philosophical than a technical decision.
I will write an article about that later, as well as about why we chose to trade in our old Linux and Windows machines to MacBooks with MacOS.
These are interesting topics because people approach such decisions based on belief, and it can lead to heated discussions.
Not now.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We started the company in 2006.
One of our first clients was T-Mobile.
We knew the people there, they knew me, and they needed an advertisement engine.
I wrote the one for index.hu, and it was still in production six years later, delivering millions of HTTP responses per day.
Not only it was the far largest traffic web server in the country, but it was also the most reliable one.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Much later at a conference, a speaker said that back in the days they checked their Internet connection by pinging the adserver of index.hu.
Other sites can be down, but if the adserver is not reachable then it is more likely they have a connection problem.
He did not know I was sitting there in the audience.
It was a great feeling hearing that.
That ad server ran for nine years uninterrupted and without any code modification.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;5-thread-stopping-adserver&quot;&gt;5. Thread Stopping AdServer&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;So we got the contract to develop an ad server for T-Mobile.
The contract size was around 30,000$.
I did not know any Java that time.
I had limited OOP experience.
I was mainly programming in C and Perl and not commercial.
But I was a good programmer, at least I though so.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We created the application in Java while I was learning it.
The users were authenticated, and we had a backing database with user data.
The ad engine had to select the ads based on the mobile subscription, number of used minutes, phone type, and other parameters.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We used PostgreSQL as the database in the dev environment and Hibernate on a Tomcat.
An advertisement had to be displayed in two seconds.
If the selection process was running longer, then a default ad was displayed.
To achieve this, we executed the selection logic in a separate thread using the ExecutorService and waiting on a Future object.
We also used the database connection pool available from the Hibernate library.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We manually tested the application, and it worked fine.
We ran some load test and it worked fine.
But I wanted to deliver perfect software, so I decided to play a bit with the case when the selection times out.
In that case, the request serving thread sends a response, but the selection thread is still running putting a useless load on an already overloaded system.
We can call &apos;stop&apos; on the thread.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We tested this scenario, and it worked fine.
The connection pool realized that the thread was stopped and closed the connection and created a new one in these cases.
I knew that the production will use ORACLE database and the connection pool will also be the one provided by ORACLE.
We did not have a test environment with these components, therefore, I decided not to use this performance-saving trick in the production system.
But I was proud of my code, and I did not want to delete the line stopping the thread.
Instead, I put it into an if statement that was never true, with a comment something like&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;// this &apos;if&apos; is always false but I keep it here to show that I know how to stop a thread
if( true ){
    thread.stop();
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now, you already get a clue, especially if you skip over the line reading it not realizing that the ACTUAL value is &apos;true&apos;.
The code went into production and worked fine.
It worked fine for a while, except when the load went up.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When the load went up, the application started to deliver the default ad.
The weird thing was that after the load went down, the application still delivered the default ad.
Operation had to restart the application to work again.
We did not have a clue what was going on, and we responded suggesting to increase the hardware capacity.
It was clearly needed to handle the peak load, but there was another problem eventually.
We tried to ignore it.
Being a small company, we were already occupied with the next project.
Putting new hardware under a service in a large corporation does not happen from one day to the other.
The service needed to restart a few times every day.
It went on between us and the project manager till he escalated the issue, and we could not ignore it anymore.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We had the log files, and we started to investigate.
The log clearly showed that the application allocated connection from the pool when a selection started.
The log also showed that the connection was returned to the pool when the selection finished even when the selection timed out.
I strongly believed that this could not be the problem, especially because we did not stop the threads in the case of timeout.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;At least that was what I thought.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We added more logging to the code, deployed it to production which essentially made it a bit slower, making the client even less happy, but it was needed.
There were log items for each request and response, we knew when a request timed out, the connection id, thread id and so on.
The log was huge, and I wrote Perl scripts to analyze it.
It took a week and a lot of diagrams until I realized that whenever a thread timed out, that connection ID never appeared later in the log.
The connection never returned to the pool, even though the library falsely reported that it was.
But why?
We did not stop the threads, and the log showed that these threads always stopped a few milliseconds after the selection timed out.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This was the first clue.
It seemed fishy.
When the selection using a few SQL selects timed out, why was it always only a little bit late?
The fact that we first tried to increase the timeout from two seconds to two and a half seconds shows how clueless we were.
It made the time outing threads to finish in two and a half second plus a few milliseconds.
Always the timeout time plus a few milliseconds.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&quot;Didn&amp;#8217;t you leave the code in that stops the thread?&quot; asked my brother.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&quot;Sure, I didn&amp;#8217;t, see, it is in an if statement that is never true.&quot;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&quot;No. That is what the comment says.&quot;&amp;#8201;&amp;#8212;&amp;#8201;he replied.&amp;#8201;&amp;#8212;&amp;#8201;&quot;But the code is there, and it stops the thread.&quot;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I was looking at that code hundreds of times blindly during those past two weeks.
I read the comment and skipped the code.
I read what I wanted to be there and not what really was there.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This time I deleted the line and the comment, and we deployed the code.
It worked fine, unlike our relationship with the client.
They canceled our contract for the further development of the ad server.
We have lost a 20,000$ contract, and we were told that we will never get any contract from them again.
I could not blame them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This &quot;never&quot; lasted three years when partnering with another company, we delivered a system they used to electronically sign four million invoices every month.
Do you remember what my very first program was on that TI-30 calculator?
That delivery I am not ashamed of.
I learned a lot during those three years.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;6-conclusion&quot;&gt;6. Conclusion&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There are many things to learn from this story.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;6-1-dont-stop-threads&quot;&gt;6.1. Don&amp;#8217;t stop threads&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Even though you technically can stop threads, you MUST not.
If you MUST not, then why experiment with it?
You can tell the thread that it can stop if it feels so.
You can use some shared state for the thread to check periodically and stop when it can do safely.
Calling &lt;code&gt;interrupt()&lt;/code&gt; on a thread is a good way to tell the thread that it can stop.
Documentations list a lot of things that may happen when you call &lt;code&gt;stop()&lt;/code&gt; on a thread, but reading it is one thing and when it happens to you is another.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Everybody has to burn the hands a few times.
The cleverer you are, the less you need to burn your hands.
There are some Mucius Scaevolas out there, not learning from their mistakes.
Do not be one.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;6-2-logs-are-only-logs&quot;&gt;6.2. Logs are only logs&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Logs contain the messages that the application writes about what it does and not what really happens.
Programmers make bugs, including misleading logs.
Even when you use a high reputation library, you can still face bugs.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;6-3-comments-can-be-dangerous&quot;&gt;6.3. Comments can be dangerous&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Comments can be dangerous.
Comments are in English and no matter how nerd you are, your eyes will read the human text first.
In this case, non-native English speakers may have a slight advantage.
If the comment is outdated, misleading or plain wrong, it may lead the maintainers&apos; eyes away from the code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A good comment does not explain what the code does.
The code precisely describes that.
You should explain why it does what it does and how other parts of the code should use, and interface the code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In this case not having any comment before the &lt;code&gt;if&lt;/code&gt; statement, or just&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;// we can switch experimental thread stopping on and off here
if( true ){
    thread.stop();
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;would have been better.
My today wisdom says to delete the line and the comment.
If you want to keep the line as a legacy, do it in a separate branch or tag in the version control system.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;6-4-you-do-not-know-when-you-are-stupid&quot;&gt;6.4. You do not know when you are stupid&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;At that point, writing my first commercial application, I was at the peak of my Dunner-Kruger curve.
You do not know when you are there.
If you feel you are an expert, you know everything, you are the best: be very careful.
You are probably at that dangerous peek.
Don&amp;#8217;t stay there, climb off on the right side and start to climb up on the peek-less long slope to the right, always with a healthy level of self-doubt.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;6-5-customer-is-always-right&quot;&gt;6.5. Customer is always right&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When the customer says that you are wrong, you are wrong.
They complained that the application does not come back from the overloaded state and our first response was to ask for more hardware.
Technically, we were right.
If the system does not ever get into the overloaded state, then there is no problem not getting back to normal from it.
However, you see how arrogant this standpoint was.
Probably this was the number one reason we lost the contract.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We learned from this mistake.
We learned many more mistakes after that, and this is a process that I have not finished yet.
Learning from mistakes may be the most perpetual thing in my life, and I think it is important for everyone.
I have many similar stories, and if you liked this one then leave a comment, give some feedback that will make me know that I should write more.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">I dedicate this article to László Fekete, my former boss and director at T-Mobile Hungary. He plays a significant role in this story as he was the one who made the decision to cancel our contract. I must acknowledge that he made the right call, and it was the correct course of action.</summary></entry><entry><title type="html">Managing IntelliJ Live templates</title><link href="https://javax0.github.io/2023/07/05/live-templates.html" rel="alternate" type="text/html" title="Managing IntelliJ Live templates" /><published>2023-07-05T00:00:00+02:00</published><updated>2023-07-05T00:00:00+02:00</updated><id>https://javax0.github.io/2023/07/05/live-templates</id><content type="html" xml:base="https://javax0.github.io/2023/07/05/live-templates.html">&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I primarily use IntelliJ for the majority of my work nowadays.
This integrated editor and development environment offers numerous excellent features, one of which is the live templates feature.
I have chosen to assist Jamal with the implementation of live templates.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Within this article, I will elucidate the methodology I have devised for editing and maintaining the live templates.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;1-problem-statement&quot;&gt;1. Problem Statement&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;IntelliJ supports the editing of live templates.
It is designed to make the creation of live templates easier for beginners rather than being highly effective for power users.
Solutions and usability can always be designed to prioritize ease of use for beginners or effectiveness for power users.
Typically, these two aspects are mutually exclusive.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the case of IntelliJ and live templates, it appears that the decision was made to prioritize the initial version.
To edit the live templates, you can navigate to the menu &lt;code&gt;Settings&lt;/code&gt; &amp;#8594; &lt;code&gt;Live Templates&lt;/code&gt;.
The templates are organized by the language they are used in, and by selecting one or clicking on the plus sign to add a new template, you will be presented with a form to edit the different parts of the template.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/javax0/javax0.github.io/master/assets/images/image-2023-07-05-11-40-53-991.png&quot; alt=&quot;image 2023 07 05 11 40 53 991&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You have the ability to edit several aspects of the live templates:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Abbreviation: This is the text you type in the editor to trigger the template.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Description: A short text that appears in the popup when you type the abbreviation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Template text: The actual content that gets inserted into the editor when the template is triggered.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Context: Specifies where the template can be triggered.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Variables: Parts of the template that can be edited when the template is triggered.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To save a template, you can click on either &quot;Apply&quot; or &quot;OK,&quot; and then proceed to add a new one.
However, when dealing with a large number of templates, such as the initial release that Jamal is working on, editing them can involve a significant number of clicks and mouse navigation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This is not the only challenge, though.
Maintaining the templates poses additional concerns.
Live templates are stored in ZIP files, and uploading them to a repository makes them accessible to users.
However, editing the templates and keeping track of changes can be tricky.
How can you efficiently make modifications to the templates?
How do you track and compare changes between different versions?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Programmers have become accustomed to tools that support them in maintaining program code, which is essentially text-based.
Similarly, we desire the same level of support when it comes to maintaining live templates.
How shall we reach that?&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;2-approach-to-solve-the-problem&quot;&gt;2. Approach to Solve the problem&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The live templates are stored as XML files within a ZIP file.
It is possible to import a ZIP file containing live templates, which will add the templates to the existing ones.
Each group of templates is stored in a separate XML file.
If a group with the same name already exists in the editor, it will be overwritten by the imported group.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;One approach to editing the templates involves exporting them, modifying the XML files, and then importing them back.
By keeping the expanded files in a version control system, changes can be tracked.
The build process can generate the ZIP file from the expanded files.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;However, this process is not ideal.
Editing XML files is not preferred, as it can be cumbersome and unintuitive.
Nobody wants to spend their time editing XML files, especially when there are other enjoyable activities to pursue, such as going to the gym, swimming pool, enjoying an apéritif, or having a barbecue, or spending time with their children.
&quot;I am going to edit some XML files, what a joy!&quot; is not a phrase commonly heard (not to mention YAML!).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;What we need is a better solution.
We require a Domain-Specific Language (DSL).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the following section, I will describe the approach I took to create a DSL specifically for this purpose and how I utilized it effectively.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;3-suggested-solution-tools&quot;&gt;3. Suggested Solution, Tools&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Creating a DSL can be approached in various ways.
The most well-known option is to use Groovy, which is frequently used for this purpose.
However, Kotlin is also a viable choice.
Notably, Groovy includes an XML builder structure that facilitates the creation of XML files.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In this particular case, I opted for a different approach, driven by several reasons.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The primary reason is that the live templates I developed are specifically for Jamal.
Jamal can serve as a DSL and supports multiple integrations.
One such integration involves running Jamal interactively while editing an Asciidoc file in IntelliJ using the Asciidoctor plugin.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;With this setup, you can also edit XML files.
IntelliJ and the Asciidoctor plugin will recognize the file as an Asciidoctor file, but Jamal will identify it as both a Jamal and XML file.
When editing a file with the &lt;code&gt;.xml.jam&lt;/code&gt; extension in IntelliJ, Jamal will save the processed XML into a file while simultaneously sending an Asciidoc document containing the XML as a fenced code block to the Asciidoctor plugin.
This allows you to edit the enhanced XML with macros in the left pane of the editor while observing the final, syntax-highlighted XML in the right pane.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There is no separate compilation phase involved.
When you edit the &lt;code&gt;.xml.jam&lt;/code&gt; file, you are simultaneously modifying the XML file.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Creating the DSL is remarkably simple.
You only need to define a few Jamal macros.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{%@sep {! !} %}
{!@define asciidoc:output=live-templates/templates/Jamal.xml!}
{!@comment This is a definition for the Jamal live macro templates for IntelliJ!}
{!@define template($name,$content,$desc,$variables)=
&amp;lt;template name=&quot;jm-$name&quot; value=&quot;{%{!#if /{!@string:startsWith/$content/#!}//@!}{!@replace /$content/\n/&amp;amp;#10;!}%}&quot; description=&quot;$desc&quot; toReformat=&quot;false&quot; toShortenFQNames=&quot;true&quot;&amp;gt;
$variables
&amp;lt;context&amp;gt;
&amp;lt;option name=&quot;AsciiDoc&quot; value=&quot;true&quot; /&amp;gt;
&amp;lt;/context&amp;gt;
&amp;lt;/template&amp;gt;
!}
{!@define variable($name,$default)=&amp;lt;variable name=&quot;$name&quot; expression=&quot;{!@replace `///`$default///&quot;///&amp;amp;quot;!}&quot; alwaysStopAt=&quot;true&quot; /&amp;gt;!}\&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To prevent conflicts with the Jamal plugin in Asciidoctor, the first line in the DSL sets the macro start and end strings to &lt;code&gt;{!&lt;/code&gt; and &lt;code&gt;!}&lt;/code&gt; respectively. By using these distinct macro delimiters, any potential clashes with the default &lt;code&gt;{%&lt;/code&gt; and &lt;code&gt;%}&lt;/code&gt; delimiters used by the Jamal plugin can be avoided. This ensures a smooth integration and usage of both the DSL and the Jamal plugin within Asciidoctor.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To clarify the process further, the &lt;code&gt;asciidoc:output&lt;/code&gt; macro is used to specify the output file in the DSL.
Without this definition, the conversion from &lt;code&gt;.xml.jam&lt;/code&gt; to &lt;code&gt;.xml&lt;/code&gt; would create a file in the same location as the source file.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In addition to the &lt;code&gt;asciidoc:output&lt;/code&gt; macro, two macros are used to define the template:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;template&lt;/code&gt;: This macro is utilized to define the structure and content of the template.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;variable&lt;/code&gt;: This macro is used to specify the variables within the template that can be customized when the template is triggered.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;These macros, namely &lt;code&gt;template&lt;/code&gt; and &lt;code&gt;variable&lt;/code&gt;, play a crucial role in creating and customizing the live templates within the DSL.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It is important to note that the abbreviation (name) of the live templates always begins with the letters &lt;code&gt;jm-&lt;/code&gt;, which stands for Jamal Macro.
This prefix is used to avoid conflicts with existing live templates and follows the same practice as the Asciidoctor plugin, which uses &lt;code&gt;ad-&lt;/code&gt; as a prefix for their live templates (where &lt;code&gt;ad&lt;/code&gt; stands for Asciidoctor).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To simplify the editing process and reduce the risk of errors, it is undesirable to manually insert this prefix every time when working with the templates.
Doing so would be a tedious and error-prone task.
Therefore, the DSL provides a macro that handles this automatically.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;code&gt;value&lt;/code&gt; attribute of the &lt;code&gt;template&lt;/code&gt; element stores the text that will be inserted into the editor when the template is triggered.
The macro processing the content parameter is the following:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{%{!#if /{!@string:startsWith/$content/#!}//@!}{!@replace /$content/\n/&amp;amp;#10;!}%}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the Asciidoc file, macros will begin with the &lt;code&gt;{%&lt;/code&gt; delimiter.
However, just like the &lt;code&gt;jm-&lt;/code&gt; prefix for live templates, we don&amp;#8217;t want to type this delimiter every time.
Since these macros are not user-defined macros, they can be invoked using the &lt;code&gt;@&lt;/code&gt; or &lt;code&gt;#&lt;/code&gt; prefix.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;@&lt;/code&gt; prefix is used when there is no need to evaluate the content of the macro before the macro itself is evaluated.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;#&lt;/code&gt; prefix is used when the content of the macro needs to be evaluated before the macro is evaluated.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Typically, the &lt;code&gt;@&lt;/code&gt; prefix is used to optimize computing power and for aesthetic reasons.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
This notation was not taken from JavaDoc.
Jamal&amp;#8217;s first version, with this syntax, was designed in the mid-1990s, before or around the same time as Java was born.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To avoid typing the &lt;code&gt;@&lt;/code&gt; prefix every time, a macro is implemented to automatically handle it.
However, in cases where the &lt;code&gt;#&lt;/code&gt; prefix is needed, we want to be able to use it.
To handle this, the content is checked within the macro.
If the content starts with &lt;code&gt;#&lt;/code&gt;, the &lt;code&gt;@&lt;/code&gt; prefix is not prepended.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Another macro called &lt;code&gt;replace&lt;/code&gt; is used to replace escaped new line characters with their XML equivalents.
This feature was not part of the initial version but was developed to simplify editing multi-line templates, as it proved to be a handy addition.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Finally, the macro string closing &lt;code&gt;%}&lt;/code&gt; is added to the template value to ensure proper syntax completion.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;After defining these macros, the templates will have the following structure:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;templateSet group=&quot;Jamal&quot;&amp;gt;
{!template |begin|begin $M$|mark the beginning of a named or anonymous block|
  {!variable |M|&quot;[marker]&quot;!}
!}
...
{!template |platUml|plantUml ($O$) $I$ \n $C$|create a PlantUml diagram|
  {!variable |O|&quot;folder=... format=... template=...&quot;!}
  {!variable |I|&quot;xyz.svg&quot;!}
  {!variable |C|&quot;...&quot;!}
!}
&amp;lt;/templateSet&amp;gt;
{!@xmlFormat!}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;At the end of the DSL, the &lt;code&gt;xmlFormat&lt;/code&gt; macro is used to format the resulting XML and also check for any errors.
With this macro, there is no need for a separate compilation phase to identify mistakes.
Any errors will be promptly displayed in the right editor pane, providing immediate feedback on the validity of the generated XML.
Additionally, the &lt;code&gt;xmlFormat&lt;/code&gt; macro ensures that the XML output is properly formatted, enhancing readability and ensuring a well-structured final result.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When the editing process is ready, can zip the DSL, publish to the repository or import it into IntelliJ directly.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;4-summary-and-takeaway&quot;&gt;4. Summary and Takeaway&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In this article, I have outlined a method for managing IntelliJ live templates using a DSL.
While it may not be worth the effort if you only need to edit a few templates, it becomes more valuable when dealing with a larger number of them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The key takeaway from this article is that the concept and approach demonstrated here can be applied to other applications as well.
Whether you have a binary or text-based dataset that is difficult to edit directly, you can create a DSL using Jamal to simplify the editing process.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;By utilizing a DSL, you can enhance productivity and streamline the editing of complex templates or datasets, making it easier to maintain and update them efficiently.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Jamal is an excellent tool for it.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;5-references&quot;&gt;5. References&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I maintain the Jamal sources and documentation on GitHub:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/verhas/jamal&quot; class=&quot;bare&quot;&gt;https://github.com/verhas/jamal&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The documentation for the Asciidoctor Jamal plugin can be found at:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/verhas/jamal/blob/master/jamal-asciidoc/README.adoc&quot; class=&quot;bare&quot;&gt;https://github.com/verhas/jamal/blob/master/jamal-asciidoc/README.adoc&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This documentation provides instructions on how to install Jamal after installing Asciidoctor, as well as where to download the live templates.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">I primarily use IntelliJ for the majority of my work nowadays. This integrated editor and development environment offers numerous excellent features, one of which is the live templates feature. I have chosen to assist Jamal with the implementation of live templates.</summary></entry></feed>